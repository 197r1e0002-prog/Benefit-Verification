<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>$Label.CreateHHVisitsDependencyFlow.SendFailureNotificationDesc</description>
        <name>SendFailureNotification</name>
        <label>$Label.CreateHHVisitsDependencyFlow.SendFailureNotificationLabel</label>
        <locationX>770</locationX>
        <locationY>708</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>NotificationId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>UserIds</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>Appointment Dependency creation failed.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <elementReference>FailureNotificationDisplayText</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetPageRef</name>
            <value>
                <stringValue>{   &quot;type&quot;: &quot;standard__objectPage&quot;,   &quot;attributes&quot;: {     &quot;objectApiName&quot;: &quot;ServiceAppointment&quot;,     &quot;actionName&quot;: &quot;home&quot;   } }</stringValue>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
    </actionCalls>
    <actionCalls>
        <description>$Label.CreateHHVisitsDependencyFlow.SuccessNotificationDesc</description>
        <name>SuccessNotification</name>
        <label>$Label.CreateHHVisitsDependencyFlow.SuccessNotificationLabel</label>
        <locationX>242</locationX>
        <locationY>708</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>NotificationId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>UserIds</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>Appointment Dependency created successfully</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>{!SuccessNotificationTextTemplate}</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetPageRef</name>
            <value>
                <stringValue>{   &quot;type&quot;: &quot;standard__objectPage&quot;,   &quot;attributes&quot;: {     &quot;objectApiName&quot;: &quot;ServiceAppointment&quot;,     &quot;actionName&quot;: &quot;home&quot;   } }</stringValue>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
    </actionCalls>
    <apiVersion>60.0</apiVersion>
    <assignments>
        <description>$Label.CreateHHVisitsDependencyFlow.AddUserIdToCollectionDesc</description>
        <name>AddUserIdToCollection</name>
        <label>$Label.CreateHHVisitsDependencyFlow.AddUserIdToCollectionLabel</label>
        <locationX>374</locationX>
        <locationY>276</locationY>
        <assignmentItems>
            <assignToReference>UserIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>GetCustomNotificationType</targetReference>
        </connector>
    </assignments>
    <constants>
        <description>$Label.CreateHHVisitsDependencyFlow.DependentVisitNotificationTypeVariableDesc</description>
        <name>DependentVisitNotificationType</name>
        <dataType>String</dataType>
        <value>
            <stringValue>HomeHealthDependentVisits</stringValue>
        </value>
    </constants>
    <decisions>
        <description>$Label.CreateHHVisitsDependencyFlow.HaveDependentVisitNotificationTypeRecordAvailableDesc</description>
        <name>HaveDependentVisitCustomNotificationType</name>
        <label>$Label.CreateHHVisitsDependencyFlow.HaveDependentVisitNotificationTypeRecordAvailableLabel</label>
        <locationX>374</locationX>
        <locationY>600</locationY>
        <defaultConnectorLabel>$Label.CreateHHVisitsDependencyFlow.DependentVisitNotificationTypeRecordAvailableDefaultOutcomeLabel</defaultConnectorLabel>
        <rules>
            <name>HasDependentVisitNotificationType</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>NotificationId</leftValueReference>
                <operator>NotEqualTo</operator>
            </conditions>
            <connector>
                <targetReference>SuccessNotification</targetReference>
            </connector>
            <label>$Label.CreateHHVisitsDependencyFlow.DependentVisitNotificationTypeRecordAvailableLabel</label>
        </rules>
    </decisions>
    <decisions>
        <description>$Label.CreateHHVisitsDependencyFlow.IsDependentVisitNotificationTypeRecordAvailableDesc</description>
        <name>IsNotificationTypeRecordAvailableFaultPath</name>
        <label>$Label.CreateHHVisitsDependencyFlow.IsDependentVisitNotificationTypeRecordAvailableLabel</label>
        <locationX>902</locationX>
        <locationY>600</locationY>
        <defaultConnectorLabel>$Label.CreateHHVisitsDependencyFlow.DependentVisitNotificationTypeRecordAvailableDefaultOutcomeLabel</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>NotificationId</leftValueReference>
                <operator>NotEqualTo</operator>
            </conditions>
            <connector>
                <targetReference>SendFailureNotification</targetReference>
            </connector>
            <label>$Label.CreateHHVisitsDependencyFlow.DependentVisitNotificationTypeRecordAvailableLabel</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>Create Home Visit Dependency {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Create Home Visit Dependency</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <description>$Label.CreateHHVisitsDependencyFlow.CreateAppointmentDependencyRecordDesc</description>
        <name>CreateAppointmentDependencyRecord</name>
        <label>$Label.CreateHHVisitsDependencyFlow.CreateAppointmentDependencyRecordLabel</label>
        <locationX>374</locationX>
        <locationY>492</locationY>
        <connector>
            <targetReference>HaveDependentVisitCustomNotificationType</targetReference>
        </connector>
        <faultConnector>
            <targetReference>IsNotificationTypeRecordAvailableFaultPath</targetReference>
        </faultConnector>
        <inputAssignments>
            <field>FSL__Dependency__c</field>
            <value>
                <stringValue>Same Start</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>FSL__Root_Service_Appointment__c</field>
            <value>
                <elementReference>$Record.RelatedVisit.Visit.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>FSL__Service_Appointment_1__c</field>
            <value>
                <elementReference>$Record.RelatedVisit.Visit.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>FSL__Service_Appointment_2__c</field>
            <value>
                <elementReference>$Record.Visit.Id</elementReference>
            </value>
        </inputAssignments>
        <object>FSL__Time_Dependency__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <description>$Label.CreateHHVisitsDependencyFlow.GetCustomNotificationTypeLabelDesc</description>
        <name>GetCustomNotificationType</name>
        <label>$Label.CreateHHVisitsDependencyFlow.GetCustomNotificationTypeLabel</label>
        <locationX>374</locationX>
        <locationY>384</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>CreateAppointmentDependencyRecord</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>DependentVisitNotificationType</elementReference>
            </value>
        </filters>
        <object>CustomNotificationType</object>
        <outputAssignments>
            <assignToReference>NotificationId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <sourceTemplate>homehealth_flows__CreateHomeVstDpnd</sourceTemplate>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
        <filterLogic>and</filterLogic>
        <filters>
            <field>RelatedVisitId__NotFound</field>
            <operator>NotEqualTo</operator>
        </filters>
        <filters>
            <field>RelatedVisitType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Dependent</stringValue>
            </value>
        </filters>
        <object>CareServiceVisit</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <scheduledPaths>
            <connector>
                <targetReference>AddUserIdToCollection</targetReference>
            </connector>
            <pathType>AsyncAfterCommit</pathType>
        </scheduledPaths>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <description>$Label.CreateHHVisitsDependencyFlow.FailureNotificationDisplayTextDesc</description>
        <name>FailureNotificationDisplayText</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>We couldn’t create the appointment dependency record for the dependent visits {!$Record.RelatedVisit.Visit.AppointmentNumber} &amp; {!$Record.Visit.AppointmentNumber}.</text>
    </textTemplates>
    <textTemplates>
        <description>$Label.CreateHHVisitsDependencyFlow.SuccessNotificationDisplayTextDesc</description>
        <name>SuccessNotificationTextTemplate</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>An appointment dependency record was created for the dependent visits {!$Record.RelatedVisit.Visit.AppointmentNumber} &amp; {!$Record.Visit.AppointmentNumber}.</text>
    </textTemplates>
    <variables>
        <name>NotificationId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>0MLxx0000004C92GAE</stringValue>
        </value>
    </variables>
    <variables>
        <description>$Label.CreateHHVisitsDependencyFlow.UserIdsVariableDesc</description>
        <name>UserIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
