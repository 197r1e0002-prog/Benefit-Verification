<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>Calls an action to send an email containing the budget document to the patient who is associated with the document generation process record that triggered the flow.</description>
        <name>SendEmailToPatient</name>
        <label>Send Email to Patient</label>
        <locationX>50</locationX>
        <locationY>1295</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <connector>
            <targetReference>SendPasswordEmailtoPatient</targetReference>
        </connector>
        <faultConnector>
            <targetReference>SetNotificationMessageSendEmailError</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <elementReference>PatientEmailAddress</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <elementReference>EmailSubject</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>EmailMessageTextTemplate</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>useLineBreaks</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
    </actionCalls>
    <actionCalls>
        <description>Calls an action to send a custom notification to the scheduler who triggered the flow.</description>
        <name>SendNotificationToScheduler</name>
        <label>Send Notification to Scheduler</label>
        <locationX>578</locationX>
        <locationY>1619</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>GetCustomNotificationType.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>NotificationRecipientIds</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <elementReference>NotificationSubject</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <elementReference>NotificationMessage</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
    </actionCalls>
    <actionCalls>
        <description>Calls an action to send an email containing the budget document password to the patient who is associated with the document generation process record that triggered the flow.</description>
        <name>SendPasswordEmailtoPatient</name>
        <label>Send Password Email to Patient</label>
        <locationX>50</locationX>
        <locationY>1403</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>SetNotificationMessageSendEmailError</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <elementReference>PatientEmailAddress</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <elementReference>PasswordEmailSubject</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>PasswordEmailMessageTextTemplate</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>useLineBreaks</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
    </actionCalls>
    <apiVersion>63.0</apiVersion>
    <assignments>
        <description>Adds the ID of the user running the flow to the NotificationRecipientIds collection.</description>
        <name>AddFlowUserIdToCollection</name>
        <label>Add Flow User ID to Collection</label>
        <locationX>1304</locationX>
        <locationY>323</locationY>
        <assignmentItems>
            <assignToReference>NotificationRecipientIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>GetAccount</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets the NotificationMessage variable to the fault message of the flow interview.</description>
        <name>SetNotificationMessageAccountError</name>
        <label>Set Notification Message</label>
        <locationX>1898</locationX>
        <locationY>539</locationY>
        <assignmentItems>
            <assignToReference>NotificationMessage</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>GetCustomNotificationType</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets the NotificationMessage variable to the fault message of the flow interview.</description>
        <name>SetNotificationMessageContentVersionError</name>
        <label>Set Notification Message</label>
        <locationX>842</locationX>
        <locationY>1079</locationY>
        <assignmentItems>
            <assignToReference>NotificationMessage</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>GetCustomNotificationType</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets NotificationMessage to the value in NotificationMessageDocumentNotGenerated.</description>
        <name>SetNotificationMessageDocumentNotGenerated</name>
        <label>Set Notification Message</label>
        <locationX>1106</locationX>
        <locationY>971</locationY>
        <assignmentItems>
            <assignToReference>NotificationMessage</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>NotificationMessageDocumentNotGenerated</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>GetCustomNotificationType</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets NotificationMessage to the value in NotificationMessageEmailUnavailable.</description>
        <name>SetNotificationMessageEmailUnavailable</name>
        <label>Set Notification Message</label>
        <locationX>1370</locationX>
        <locationY>755</locationY>
        <assignmentItems>
            <assignToReference>NotificationMessage</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>NotificationMessageEmailUnavailable</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>GetCustomNotificationType</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets NotificationMessage to the value in NotificationMessageNonPersonAccount.</description>
        <name>SetNotificationMessageNonPersonAccount</name>
        <label>Set Notification Message</label>
        <locationX>1634</locationX>
        <locationY>647</locationY>
        <assignmentItems>
            <assignToReference>NotificationMessage</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>NotificationMessageNonPersonAccount</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>GetCustomNotificationType</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets the NotificationMessage variable to the fault message of the flow when thereâ€™s an error sending the email.</description>
        <name>SetNotificationMessageSendEmailError</name>
        <label>Set Notification Message</label>
        <locationX>578</locationX>
        <locationY>1403</locationY>
        <assignmentItems>
            <assignToReference>NotificationMessage</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>GetCustomNotificationType</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets PatientEmailAddress to the email of the Account from GetAccount record variable.</description>
        <name>SetPatientEmailAddress</name>
        <label>Set Patient Email Address</label>
        <locationX>578</locationX>
        <locationY>755</locationY>
        <assignmentItems>
            <assignToReference>PatientEmailAddress</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetAccount.PersonEmail</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>PatientName</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>{!GetAccount.FirstName}</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>IsBudgetDocumentGenerated</targetReference>
        </connector>
    </assignments>
    <constants>
        <description>Stores the text to be used as the default value for the subject of the email sent to the patient.</description>
        <name>EmailSubject</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Home Healthcare Budget Information</stringValue>
        </value>
    </constants>
    <constants>
        <description>Stores a value thatâ€™s used as the default custom notification type name.</description>
        <name>HomeHealthBudgetNotificationType</name>
        <dataType>String</dataType>
        <value>
            <stringValue>HomeHealthBudget</stringValue>
        </value>
    </constants>
    <constants>
        <description>Stores the notification error message to be used when an email address isnâ€™t available for the account passed into the flow.</description>
        <name>NotificationMessageEmailUnavailable</name>
        <dataType>String</dataType>
        <value>
            <stringValue>We couldnâ€™t send the budget document because an email ID isnâ€™t available for the account. Add an email ID in the patientâ€™s account record, and try again.</stringValue>
        </value>
    </constants>
    <constants>
        <description>Stores the notification message to be used when the account passed into the flow isnâ€™t a person account.</description>
        <name>NotificationMessageNonPersonAccount</name>
        <dataType>String</dataType>
        <value>
            <stringValue>We couldnâ€™t send the budget document to the patient because the associated account isnâ€™t a person account. Select a person account and try again.</stringValue>
        </value>
    </constants>
    <constants>
        <description>Stores the notification subject thatâ€™s sent to the scheduler when an error occurs in the flow and the budget document isnâ€™t sent to patients.</description>
        <name>NotificationSubject</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Budget document wasnâ€™t sent to patient</stringValue>
        </value>
    </constants>
    <constants>
        <description>Stores the text to be used as the default value for the subject of the email, containing the budget document password, to be sent to the patient.</description>
        <name>PasswordEmailSubject</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Home Healthcare Budget Document Password</stringValue>
        </value>
    </constants>
    <decisions>
        <description>Determines whether an email address is available for the account by checking if the email of Account from GetAccount contains a value.</description>
        <name>HaveEmailAddress</name>
        <label>Have Email Address?</label>
        <locationX>974</locationX>
        <locationY>647</locationY>
        <defaultConnector>
            <targetReference>SetNotificationMessageEmailUnavailable</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>HasEmailAddress</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetAccount.PersonEmail</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetPatientEmailAddress</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether the budget document is generated by checking if the status of the document generation process record that triggered the flow is Success.</description>
        <name>IsBudgetDocumentGenerated</name>
        <label>Is Budget Document Generated?</label>
        <locationX>578</locationX>
        <locationY>863</locationY>
        <defaultConnector>
            <targetReference>SetNotificationMessageDocumentNotGenerated</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>IsGeneratedDocument</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Success</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetContentVersion</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether the account record is a person account by checking if IsPersonAccount of Account from GetAccount is True.</description>
        <name>IsPersonAccount</name>
        <label>Is Person Account?</label>
        <locationX>1304</locationX>
        <locationY>539</locationY>
        <defaultConnector>
            <targetReference>SetNotificationMessageNonPersonAccount</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>IsPersonAccountRecord</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetAccount.IsPersonAccount</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>HaveEmailAddress</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>Home Health Visit Budget Flow {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Home Health Visit Budget Flow</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <description>Creates a content delivery record, setting the content version ID and content delivery name to the content version ID and title of the  Content Version from GetContentVersion record variable respectively. Also sets allow download in original format, allow download as PDF, allow view in browser, and require password to access content to true, and sets content delivery expires to false.</description>
        <name>CreateContentDelivery</name>
        <label>Create Content Delivery</label>
        <locationX>50</locationX>
        <locationY>1079</locationY>
        <connector>
            <targetReference>GetContentDelivery</targetReference>
        </connector>
        <inputAssignments>
            <field>ContentVersionId</field>
            <value>
                <elementReference>GetContentVersion.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Name</field>
            <value>
                <elementReference>GetContentVersion.Title</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>PreferencesAllowOriginalDownload</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>PreferencesAllowPDFDownload</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>PreferencesAllowViewInBrowser</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>PreferencesExpires</field>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>PreferencesPasswordRequired</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <object>ContentDistribution</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <description>Gets the account record with an ID matching the Reference Object ID of the document generation process record that triggered the flow. Stores the result in Account from GetAccount record variable.</description>
        <name>GetAccount</name>
        <label>Get Account</label>
        <locationX>1304</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>IsPersonAccount</targetReference>
        </connector>
        <faultConnector>
            <targetReference>SetNotificationMessageAccountError</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ReferenceObject</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets the content delivery record with a content version ID matching the ID of the Content Version from GetContentVersion record variable. Stores the result in the Content Delivery from GetContentDelivery record variable.</description>
        <name>GetContentDelivery</name>
        <label>Get Content Delivery</label>
        <locationX>50</locationX>
        <locationY>1187</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SendEmailToPatient</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ContentVersionId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetContentVersion.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ContentDistribution</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets the content version record with an Id matching the response text of the document generation process record that triggered the flow. Stores the result in the Content Version from GetContentVersion record variable.</description>
        <name>GetContentVersion</name>
        <label>Get Content Version</label>
        <locationX>50</locationX>
        <locationY>971</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>CreateContentDelivery</targetReference>
        </connector>
        <faultConnector>
            <targetReference>SetNotificationMessageContentVersionError</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ResponseText</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ContentVersion</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets the custom notification type record with a developer name matching the value specified in HomeHealthBudgetNotificationType. Stores the result in Custom Notification Type from GetCustomNotificationType record variable.</description>
        <name>GetCustomNotificationType</name>
        <label>Get Custom Notification Type</label>
        <locationX>578</locationX>
        <locationY>1511</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SendNotificationToScheduler</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>HomeHealthBudgetNotificationType</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CustomNotificationType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <sourceTemplate>homehealth_flows__SendHmVstBudgetDoc</sourceTemplate>
    <start>
        <locationX>1178</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>AddFlowUserIdToCollection</targetReference>
        </connector>
        <filterLogic>(1 OR 2) AND 3</filterLogic>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Success</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Failure</stringValue>
            </value>
        </filters>
        <filters>
            <field>RequestText</field>
            <operator>Contains</operator>
            <value>
                <stringValue>&quot;applicationType&quot;:&quot;HomeHealth&quot;</stringValue>
            </value>
        </filters>
        <object>DocumentGenerationProcess</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <description>Stores the text template that contains the email message to be sent to the patient.</description>
        <name>EmailMessageTextTemplate</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;Hello {!PatientName},&lt;/p&gt;&lt;p&gt;Your budget document for home healthcare visit was generated.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Review the document for your benefits, quotes, and net cost.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;To view the budget details, go to&amp;nbsp;&lt;a href=&quot;{!GetContentDelivery.DistributionPublicUrl}&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Budget Document&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Youâ€™ll receive a separate email with the password to open the budget document.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Use the document reference ID &lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;{!$Record.Id}&lt;/span&gt; when you contact the home health agency.&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <description>Stores the text template that contains the email message, with the budget document password, to be sent to the patient.</description>
        <name>PasswordEmailMessageTextTemplate</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;Hello {!PatientName},&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Your budget document for home healthcare visit was generated and sent to your email address.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;To open the budget document, use the password: &lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;&quot;{!GetContentDelivery.Password}&quot;&lt;/span&gt;&lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <description>Stores the notification message thatâ€™s sent to the scheduler when an error occurs in the flow and the budget document isnâ€™t sent to patients.</description>
        <name>NotificationMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the notification error message to be used when the budget document wasnâ€™t generated for the patient.</description>
        <name>NotificationMessageDocumentNotGenerated</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Something went wrong and we couldnâ€™t generate the budget document for the patient. Try again or contact your Salesforce admin for help.</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores ID of the flow user.</description>
        <name>NotificationRecipientIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the email address of the patient to send the budget document.</description>
        <name>PatientEmailAddress</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the name of the patient to send the budget document.</description>
        <name>PatientName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
