<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>Calls an action to reschedule home visits with a service appointment ID in SubsequentServiceAppointmentIds, using the scheduling policy selected on CollectSchedulingDetailsScreen.</description>
        <name>RescheduleSubsequentRecurringVisits</name>
        <label>Reschedule Subsequent Recurring Visits</label>
        <locationX>1106</locationX>
        <locationY>1898</locationY>
        <actionName>rescheduleRecurringHomeVisits</actionName>
        <actionType>rescheduleRecurringHomeVisits</actionType>
        <connector>
            <targetReference>DisplaySuccessRescheduleSubsequentRecurringVisitsScreen</targetReference>
        </connector>
        <faultConnector>
            <targetReference>DisplayErrorRescheduleSubsequentRecurringVisitsScreen</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>schedulingPolicyId</name>
            <value>
                <elementReference>SchedulingPolicyPicklist</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>firstVisitStartDateTime</name>
            <value>
                <elementReference>VisitReschedulingDetailsComponent.visitStartDateTime</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>firstVisitEndDateTime</name>
            <value>
                <elementReference>VisitReschedulingDetailsComponent.visitEndDateTime</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recurrenceFrequencyType</name>
            <value>
                <elementReference>recurrenceFrequencyType</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recurringDaysList</name>
            <value>
                <elementReference>reschedulingWeekDays</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>operatingHoursId</name>
            <value>
                <elementReference>VisitReschedulingDetailsComponent.operatingHourId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>serviceAppointmentId</name>
            <value>
                <elementReference>SubsequentServiceAppointmentIds</elementReference>
            </value>
        </inputParameters>
        <nameSegment>rescheduleRecurringHomeVisits</nameSegment>
    </actionCalls>
    <actionCalls>
        <description>Calls an action to schedule a home visit with a Service Appointment ID equal to the ID of homeVisit, using the scheduling policy that the user selected in SchedulingPolicyPicklist on CollectSchedulingDetailsScreen.</description>
        <name>RescheduleVisit</name>
        <label>Reschedule Visit</label>
        <locationX>314</locationX>
        <locationY>2006</locationY>
        <actionName>scheduleHomeVisit</actionName>
        <actionType>scheduleHomeVisit</actionType>
        <connector>
            <targetReference>DisplaySuccessMessageScreen</targetReference>
        </connector>
        <faultConnector>
            <targetReference>DisplayScheduleVisitErrorScreen</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>serviceAppointmentId</name>
            <value>
                <elementReference>homeVisit.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>schedulingPolicyId</name>
            <value>
                <elementReference>SchedulingPolicyPicklist</elementReference>
            </value>
        </inputParameters>
        <nameSegment>scheduleHomeVisit</nameSegment>
    </actionCalls>
    <apiVersion>62.0</apiVersion>
    <assignments>
        <description>Adds the service appointment ID of the current care service visit to the CareServiceVisittIds collection.</description>
        <name>AddServiceAppointmentIdsToCollection</name>
        <label>Add Service Appointment IDs to Collection</label>
        <locationX>600</locationX>
        <locationY>782</locationY>
        <assignmentItems>
            <assignToReference>ServiceAppointmentIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>IterateThroughCareServiceVisits.VisitId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>IterateThroughCareServiceVisits</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Adds the ID of the current record to the SubsequentServiceAppointmentIds collection.</description>
        <name>AddSubsequentServiceAppointmentIdsToCollection</name>
        <label>Add Subsequent Service Appointment ID to Collection</label>
        <locationX>600</locationX>
        <locationY>1190</locationY>
        <assignmentItems>
            <assignToReference>SubsequentServiceAppointmentIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>IterateThroughSubsequentServiceAppointments.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>IterateThroughSubsequentServiceAppointments</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets the SubsequentServiceAppointmentCount variable to the count of records in Service Appointments from GetSubsequentServiceAppointments.</description>
        <name>SetSubsequentServiceAppointmentCount</name>
        <label>Set Subsequent Service Appointment Count</label>
        <locationX>512</locationX>
        <locationY>1382</locationY>
        <assignmentItems>
            <assignToReference>SubsequentServiceAppointmentCount</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>GetSubsequentServiceAppointments</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>CollectSchedulingDetailsScreen</targetReference>
        </connector>
    </assignments>
    <constants>
        <description>Stores the name of the default scheduling policy thatâ€™s delivered out of the box with Home Health. To use a different home health scheduling policy as the default, change the default policy name to the name of the home health scheduling policy to use.</description>
        <name>DefaultSchedulingPolicyName</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Home Health Default Scheduling Policy</stringValue>
        </value>
    </constants>
    <constants>
        <description>Stores a null date/time value</description>
        <name>NullDateTimeValue</name>
        <dataType>Date</dataType>
    </constants>
    <decisions>
        <description>Determines whether to reschedule a single home visit or recurring home visits.</description>
        <name>AreReschedulingRecurringHomeVisits</name>
        <label>Are Rescheduling Recurring Home Visits?</label>
        <locationX>380</locationX>
        <locationY>350</locationY>
        <defaultConnector>
            <targetReference>GetCareServiceVisit</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Yes (Default)</defaultConnectorLabel>
        <rules>
            <name>AreReschedulingSingleVisit</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>AreReschedulingRecurringVisits</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>CollectSchedulingDetailsScreen</targetReference>
            </connector>
            <label>No</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether the flow user is rescheduling a single service appointment or all subsequent recurring service appointments.</description>
        <name>AreReschedulingSubsequentRecurringHomeVisits</name>
        <label>Are Rescheduling Subsequent Recurring Home Visits?</label>
        <locationX>710</locationX>
        <locationY>1790</locationY>
        <defaultConnector>
            <targetReference>RescheduleSubsequentRecurringVisits</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Yes (Default)</defaultConnectorLabel>
        <rules>
            <name>RescheduleSingleVisit</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>AreReschedulingRecurringVisits</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SubsequentServiceAppointmentCount</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>1.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>UpdateHomeVisitRecord</targetReference>
            </connector>
            <label>No</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether the flow user set an end date and time for the visit to be scheduled.</description>
        <name>HaveEndDateAndTime</name>
        <label>Have End Date and Time?</label>
        <locationX>380</locationX>
        <locationY>1682</locationY>
        <defaultConnector>
            <targetReference>AreReschedulingSubsequentRecurringHomeVisits</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Yes (Default)</defaultConnectorLabel>
        <rules>
            <name>HasNoEndDateTime</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>VisitReschedulingDetailsComponent.visitStartDateTime</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>NullDateTimeValue</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>DisplayErrorTimeslotScreen</targetReference>
            </connector>
            <label>No</label>
        </rules>
    </decisions>
    <dynamicChoiceSets>
        <description>Stores the scheduling policy records to be shown in SchedulingPolicy on CollectSchedulingDetailsScreen.</description>
        <name>SchedulingPolicyRecordChoiceSet</name>
        <dataType>String</dataType>
        <displayField>Name</displayField>
        <object>FSL__Scheduling_Policy__c</object>
        <valueField>Id</valueField>
    </dynamicChoiceSets>
    <environments>Default</environments>
    <interviewLabel>Reschedule Home Healthcare Visit {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Reschedule Home Healthcare Visit</label>
    <loops>
        <description>Repeats actions in a loop for each record in Care Service Visit from GetAssociatedCareServiceVisits.</description>
        <name>IterateThroughCareServiceVisits</name>
        <label>Iterate Through Care Service Visits</label>
        <locationX>512</locationX>
        <locationY>674</locationY>
        <collectionReference>GetAssociatedCareServiceVisits</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>AddServiceAppointmentIdsToCollection</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>GetSubsequentServiceAppointments</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <description>Repeats actions in a loop for each record in Service Appointments from GetSubsequentServiceAppointments.</description>
        <name>IterateThroughSubsequentServiceAppointments</name>
        <label>Iterate Through Subsequent Service Appointments</label>
        <locationX>512</locationX>
        <locationY>1082</locationY>
        <collectionReference>GetSubsequentServiceAppointments</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>AddSubsequentServiceAppointmentIdsToCollection</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>SetSubsequentServiceAppointmentCount</targetReference>
        </noMoreValuesConnector>
    </loops>
    <overriddenFlow>homehealth_flows__RescheduleHomeVisit</overriddenFlow>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <description>Gets the care service visit records with a care service visit plan ID that matches the CareServiceVisitPlanId of the care service visit record from GetCareServiceVisit and an account ID that matches the account passed into the flow.</description>
        <name>GetAssociatedCareServiceVisits</name>
        <label>Get Associated Care Service Visits</label>
        <locationX>512</locationX>
        <locationY>566</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>IterateThroughCareServiceVisits</targetReference>
        </connector>
        <faultConnector>
            <targetReference>DisplayErrorAssociatedCareServiceVisitsScreen</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>CareServiceVisitPlanId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetCareServiceVisit.CareServiceVisitPlanId</elementReference>
            </value>
        </filters>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>account.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>CareServiceVisit</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets the care service visit record with an ID that matches the VisitId of the service appointment record that was passed into the flow and an account ID that matches the ID of the account passed into the flow.</description>
        <name>GetCareServiceVisit</name>
        <label>Get Care Service Visit</label>
        <locationX>512</locationX>
        <locationY>458</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetAssociatedCareServiceVisits</targetReference>
        </connector>
        <faultConnector>
            <targetReference>DisplayErrorCareServiceVisitScreen</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>account.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>VisitId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>homeVisit.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CareServiceVisit</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets the scheduling policy record with a name matching the value in DefaultSchedulingPolicy. Stores the ID and Name fields in the Scheduling Policy from GetSchedulingPolicy record variable.</description>
        <name>GetSchedulingPolicy</name>
        <label>Get Scheduling Policy</label>
        <locationX>380</locationX>
        <locationY>134</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetWorkType</targetReference>
        </connector>
        <faultConnector>
            <targetReference>DisplayErrorSchedulingPolicyScreen</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>DefaultSchedulingPolicyName</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>FSL__Scheduling_Policy__c</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>Name</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets all subsequent recurring service appointments with an account ID matching the ID of the account passed into the flow, a record ID in CareServiceVisitIds, a schedule start date and time that matches or is after the Earliest Start Permitted of the service appointment passed into the flow, and that arenâ€™t canceled or completed.</description>
        <name>GetSubsequentServiceAppointments</name>
        <label>Get Subsequent Service Appointments</label>
        <locationX>512</locationX>
        <locationY>974</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>IterateThroughSubsequentServiceAppointments</targetReference>
        </connector>
        <faultConnector>
            <targetReference>DisplayErrorSubsequentServiceAppointmentsScreen</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>account.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>In</operator>
            <value>
                <elementReference>ServiceAppointmentIds</elementReference>
            </value>
        </filters>
        <filters>
            <field>EarliestStartTime</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <elementReference>homeVisit.EarliestStartTime</elementReference>
            </value>
        </filters>
        <filters>
            <field>StatusCategory</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Canceled</stringValue>
            </value>
        </filters>
        <filters>
            <field>StatusCategory</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>ServiceAppointment</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets the work type record with an ID that matches the work type ID of the service appointment passed into the flow.</description>
        <name>GetWorkType</name>
        <label>Get Work Type</label>
        <locationX>380</locationX>
        <locationY>242</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>AreReschedulingRecurringHomeVisits</targetReference>
        </connector>
        <faultConnector>
            <targetReference>DisplayErrorSWorkTypeScreen</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>homeVisit.WorkTypeId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>WorkType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <description>Updates the home visit record with an ID matching the ID associated with the record in homeVisit. The DueDate, EarliestStartTime, SchedStartTime, SchedEndTime, and Status fields are updated to the values specified in CollectSchedulingDetails.</description>
        <name>UpdateHomeVisitRecord</name>
        <label>Update Home Visit Record</label>
        <locationX>314</locationX>
        <locationY>1898</locationY>
        <connector>
            <targetReference>RescheduleVisit</targetReference>
        </connector>
        <faultConnector>
            <targetReference>DisplayErrorHomeVisitScreen</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>homeVisit.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>DueDate</field>
            <value>
                <elementReference>VisitReschedulingDetailsComponent.visitEndDateTime</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>EarliestStartTime</field>
            <value>
                <elementReference>VisitReschedulingDetailsComponent.visitStartDateTime</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>FSL__Pinned__c</field>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SchedEndTime</field>
        </inputAssignments>
        <inputAssignments>
            <field>SchedStartTime</field>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>None</stringValue>
            </value>
        </inputAssignments>
        <object>ServiceAppointment</object>
    </recordUpdates>
    <screens>
        <description>$Label.RescheduleHomeVisitFlow.CollectSchedulingDetailsScreenDesc</description>
        <name>CollectSchedulingDetailsScreen</name>
        <label>Collect Scheduling Details</label>
        <locationX>380</locationX>
        <locationY>1574</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>HaveEndDateAndTime</targetReference>
        </connector>
        <fields>
            <name>CollectSchedulingDetailsScreen_Section1</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>CollectSchedulingDetailsScreen_Section1_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>CareServiceTypeDisplayText</name>
                    <fieldText>&lt;p&gt;Care Service Type&lt;/p&gt;&lt;p&gt;{!GetWorkType.Name}&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>CollectSchedulingDetailsScreen_Section1_Column2</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>SubsequentVisitsToReschedule</name>
                    <fieldText>&lt;p&gt;Recurring Visits to Reschedule&lt;/p&gt;&lt;p&gt;{!SubsequentServiceAppointmentCount}&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>SubsequentServiceAppointmentCount</leftValueReference>
                            <operator>GreaterThan</operator>
                            <rightValue>
                                <numberValue>1.0</numberValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithoutHeader</regionContainerType>
        </fields>
        <fields>
            <name>VisitReschedulingDetailsComponent</name>
            <extensionName>healthcloud:shiftSlotDateTimeSelection</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>operatingHourId</name>
                <value>
                    <elementReference>account.OperatingHours.Id</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>referenceId</name>
                <value>
                    <elementReference>homeVisitDetails.referenceId</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>source</name>
                <value>
                    <elementReference>homeVisitDetails.source</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>CollectSchedulingDetailsScreen_Section2</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>CollectSchedulingDetailsScreen_Section2_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>SchedulingPolicyPicklist</name>
                    <choiceReferences>SchedulingPolicyRecordChoiceSet</choiceReferences>
                    <dataType>String</dataType>
                    <defaultValue>
                        <elementReference>GetSchedulingPolicy.Id</elementReference>
                    </defaultValue>
                    <fieldText>Scheduling Policy</fieldText>
                    <fieldType>DropdownBox</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>CollectSchedulingDetailsScreen_Section2_Column2</name>
                <fieldType>Region</fieldType>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithoutHeader</regionContainerType>
        </fields>
        <fields>
            <name>RecurringPatternSelection</name>
            <extensionName>healthcloud:recurrencePatternSelection</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <outputParameters>
                <assignToReference>recurrenceFrequencyType</assignToReference>
                <name>recurrenceType</name>
            </outputParameters>
            <outputParameters>
                <assignToReference>reschedulingWeekDays</assignToReference>
                <name>recurringDaysList</name>
            </outputParameters>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>SubsequentServiceAppointmentCount</leftValueReference>
                    <operator>GreaterThan</operator>
                    <rightValue>
                        <numberValue>1.0</numberValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <nextOrFinishButtonLabel>Reschedule</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <description>$Label.RescheduleHomeVisitFlow.DisplayErrorAssociatedCareServiceVisitDescription</description>
        <name>DisplayErrorAssociatedCareServiceVisitsScreen</name>
        <label>Display Error</label>
        <locationX>1040</locationX>
        <locationY>674</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>AssociatedCareServiceVisitsErrorDisplayText</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;Reschedule Home Visit Flow Get Care Service Visit Error&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent; color: rgb(0, 0, 0); font-family: &amp;quot;Arial Narrow&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;{!$Flow.FaultMessage}&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <description>$Label.RescheduleHomeVisitFlow.RescheduleHVErrorDescrition</description>
        <name>DisplayErrorCareServiceVisitScreen</name>
        <label>Display Error</label>
        <locationX>1304</locationX>
        <locationY>566</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>CareServiceVisitErrorDisplayText</name>
            <fieldText>&lt;p&gt;Reschedule Home Visit Flow Get Care Service Visit Error&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;Arial Narrow&amp;quot;, sans-serif; color: rgb(0, 0, 0); background-color: transparent;&quot;&gt;{!$Flow.FaultMessage}&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <description>$Label.RescheduleHomeVisitFlow.DisplayErrorScreenUpdateDesc</description>
        <name>DisplayErrorHomeVisitScreen</name>
        <label>Display Error</label>
        <locationX>842</locationX>
        <locationY>2006</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>HomeVisitErrorDisplayText</name>
            <fieldText>&lt;p&gt;Something went wrong and we couldn&apos;t create the home visit record.  Ask your Salesforce admin for help. &lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent; color: rgb(0, 0, 0); font-family: &amp;quot;Arial Narrow&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;{!$Flow.FaultMessage}&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <description>$Label.RescheduleHomeVisitFlow.SubsequentRecurringVisitError</description>
        <name>DisplayErrorRescheduleSubsequentRecurringVisitsScreen</name>
        <label>Display Error</label>
        <locationX>1370</locationX>
        <locationY>2006</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>RescheduleSubsequentRecurringVisitsErrorDisplayText</name>
            <fieldText>&lt;p&gt;Reschedule Recurring Visits Error&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;Arial Narrow&amp;quot;, sans-serif; color: rgb(0, 0, 0); background-color: transparent;&quot;&gt;{!$Flow.FaultMessage}&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <description>$Label.RescheduleHomeVisitFlow.DisplayErrorDescription</description>
        <name>DisplayErrorSchedulingPolicyScreen</name>
        <label>Display Error</label>
        <locationX>1898</locationX>
        <locationY>242</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>SchedulingPolicyErrorDisplayText</name>
            <fieldText>&lt;p&gt;__MISSING LABEL__ PropertyFile - val RescheduleErrMsgGetSchedulingPolicy not found in section RescheduleHomeVisitFlow&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;Arial Narrow&amp;quot;, sans-serif; color: rgb(0, 0, 0); background-color: transparent;&quot;&gt;{!$Flow.FaultMessage}&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <description>$Label.RescheduleHomeVisitFlow.SubsequentServiceAppointmentsError</description>
        <name>DisplayErrorSubsequentServiceAppointmentsScreen</name>
        <label>Display Error</label>
        <locationX>776</locationX>
        <locationY>1082</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>SubsequentServiceAppointmentsErrorDisplayText</name>
            <fieldText>&lt;p&gt;Reschedule Home Visit Flow Get Downstream Service Appointments Error&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent; color: rgb(0, 0, 0); font-family: &amp;quot;Arial Narrow&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;{!$Flow.FaultMessage}&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <description>$Label.RescheduleHomeVisitFlow.DisplayErrorMessage</description>
        <name>DisplayErrorSWorkTypeScreen</name>
        <label>Display Error</label>
        <locationX>1634</locationX>
        <locationY>350</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>WorkTypeErrorDisplayText</name>
            <fieldText>&lt;p&gt;Reschedule Home Visit Flow Get WorkType Error&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-size: 16px; font-family: &amp;quot;Arial Narrow&amp;quot;, sans-serif;&quot;&gt;{!$Flow.FaultMessage}&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <description>$Label.RescheduleHomeVisitFlow.DisplayErrorScreenDesc</description>
        <name>DisplayErrorTimeslotScreen</name>
        <label>Display Error</label>
        <locationX>50</locationX>
        <locationY>1790</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>TimeslotErrorDisplayText</name>
            <fieldText>&lt;p&gt;We canâ€™t schedule a visit time because the patientâ€™s operating hours arenâ€™t fully configured. Your Salesforce admin can help with that.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <description>$Label.RescheduleHomeVisitFlow.ActionErrorScreenDesc</description>
        <name>DisplayScheduleVisitErrorScreen</name>
        <label>Display Error</label>
        <locationX>578</locationX>
        <locationY>2114</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>ScheduleVisitErrorDisplayText</name>
            <fieldText>&lt;p&gt;Something went wrong. Give this error message to your Salesforce admin: &lt;/p&gt;&lt;p&gt;{!$Flow.FaultMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <description>$Label.RescheduleHomeVisitFlow.CompletionScreenDesc</description>
        <name>DisplaySuccessMessageScreen</name>
        <label>Display Success Message</label>
        <locationX>314</locationX>
        <locationY>2114</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>SuccessMessageDisplayText</name>
            <fieldText>&lt;p&gt;Weâ€™re rescheduling the visit and will let you know when weâ€™re done.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <description>$Label.RescheduleHomeVisitFlow.SuccessDisplayMessage</description>
        <name>DisplaySuccessRescheduleSubsequentRecurringVisitsScreen</name>
        <label>Display Success Message</label>
        <locationX>1106</locationX>
        <locationY>2006</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>SuccessMessageRescheduleSubsequentRecurringVisitsDisplayText</name>
            <fieldText>&lt;p&gt;Weâ€™re rescheduling the subsequent recurring visits and will let you know when weâ€™re done.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <start>
        <locationX>254</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>GetSchedulingPolicy</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <description>Stores the patientâ€™s account record thatâ€™s passed into the flow.</description>
        <name>account</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>Account</objectType>
    </variables>
    <variables>
        <description>Stores a Boolean value indicating whether all subsequent recurring home visits must be rescheduled. This value is passed into the flow.</description>
        <name>AreReschedulingRecurringVisits</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <description>Stores the service appointment record thatâ€™s passed into the flow.</description>
        <name>homeVisit</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>ServiceAppointment</objectType>
    </variables>
    <variables>
        <description>Stores an Apex heathcloudext__HomeVisitDetails record that contains the source and the reference ID of the home visit, and is passed into the flow.</description>
        <name>homeVisitDetails</name>
        <apexClass>healthcloudext__HomeVisitDetails</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the ID of the operating hours record to use for rescheduling the subsequent recurring visits for a patient during the operating hours.</description>
        <name>OperatingHoursId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the frequency type of recurring home visits. Valid values are Daily and Weekly.</description>
        <name>recurrenceFrequencyType</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue>Daily</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the days of the week to use for rescheduling recurring visits.</description>
        <name>reschedulingWeekDays</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>Stores a collection of service appointment IDs.</description>
        <name>ServiceAppointmentIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the count of service appointments to be rescheduled.</description>
        <name>SubsequentServiceAppointmentCount</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>1.0</numberValue>
        </value>
    </variables>
    <variables>
        <description>Stores the service appointment IDs to be rescheduled.</description>
        <name>SubsequentServiceAppointmentIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
