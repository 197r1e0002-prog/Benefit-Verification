<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>$Label.ScheduleHomeVisitsFlow.CreateTemplateRecordsDesc</description>
        <name>CreateTemplateRecords</name>
        <label>$Label.ScheduleHomeVisitsFlow.CreateTemplateRecordsLabel</label>
        <locationX>10030</locationX>
        <locationY>4112</locationY>
        <actionName>scheduleRecurringHomeVisit</actionName>
        <actionType>scheduleRecurringHomeVisit</actionType>
        <connector>
            <targetReference>GetWorkType</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Copy_3_of_Rollback_records_created</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>schedulingPolicyId</name>
            <value>
                <elementReference>SchedulingPolicyPicklist</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>startTime</name>
            <value>
                <elementReference>startDateStartTime</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>endTime</name>
            <value>
                <elementReference>startDateEndTime</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>visitsRequired</name>
            <value>
                <elementReference>StartOfCareVisitsRequired</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>frequencyType</name>
            <value>
                <elementReference>recurrenceType</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>clinicalServiceRequestId</name>
            <value>
                <elementReference>clinicalServiceRequest</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>skills</name>
            <value>
                <elementReference>CareResource1SkillIds</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>operatingHoursId</name>
            <value>
                <elementReference>OperatingHoursId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>accountId</name>
            <value>
                <elementReference>recordId.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>serviceTerritoryId</name>
            <value>
                <elementReference>Region.recordId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>workTypeIdsList</name>
            <value>
                <elementReference>WorkTypeIds</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>usageType</name>
            <value>
                <elementReference>ManualAssignmentType</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>flowInterviewId</name>
            <value>
                <stringValue>{!$Flow.InterviewGuid} </stringValue>
            </value>
        </inputParameters>
        <nameSegment>scheduleRecurringHomeVisit</nameSegment>
        <outputParameters>
            <assignToReference>ServiceAppointmentTemplateId</assignToReference>
            <name>serviceAppointmentId</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <description>$Label.ScheduleHomeVisitsFlow.CreateTemplateRecordsRecurringVisitDesc</description>
        <name>CreateTemplateRecordsRecurringVisit</name>
        <label>$Label.ScheduleHomeVisitsFlow.CreateTemplateRecordsLabel</label>
        <locationX>2514</locationX>
        <locationY>5252</locationY>
        <actionName>scheduleRecurringHomeVisit</actionName>
        <actionType>scheduleRecurringHomeVisit</actionType>
        <connector>
            <targetReference>GetWorkTypeRecurringVisit</targetReference>
        </connector>
        <faultConnector>
            <targetReference>RollBackRecordsCreateTemplateRecordsError</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>schedulingPolicyId</name>
            <value>
                <elementReference>SchedulingPolicyPicklist</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>startTime</name>
            <value>
                <elementReference>schedulingStartDateTime</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>endTime</name>
            <value>
                <elementReference>SchedulingEndDateTime</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>visitsRequired</name>
            <value>
                <elementReference>VisitsRequiredNumber</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>frequencyType</name>
            <value>
                <elementReference>recurrenceType</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>selectedDays</name>
            <value>
                <elementReference>recurrenceWeekDays</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>clinicalServiceRequestId</name>
            <value>
                <elementReference>clinicalServiceRequest</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>skills</name>
            <value>
                <elementReference>CareResource1SkillIds</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>operatingHoursId</name>
            <value>
                <elementReference>OperatingHoursId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>accountId</name>
            <value>
                <elementReference>recordId.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>serviceTerritoryId</name>
            <value>
                <elementReference>Region.recordId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>workTypeIdsList</name>
            <value>
                <elementReference>WorkTypeIds</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>usageType</name>
            <value>
                <elementReference>ManualAssignmentType</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>flowInterviewId</name>
            <value>
                <elementReference>$Flow.InterviewGuid</elementReference>
            </value>
        </inputParameters>
        <nameSegment>scheduleRecurringHomeVisit</nameSegment>
        <outputParameters>
            <assignToReference>ServiceAppointmentTemplateId</assignToReference>
            <name>serviceAppointmentId</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <description>$Label.ScheduleHomeVisitsFlow.GetResourcesforRecurringVisitManualSchedulingDesc</description>
        <name>GetResourcesforRecurringVisitManualScheduling</name>
        <label>$Label.ScheduleHomeVisitsFlow.GetResourcesforRecurringVisitManualSchedulingLabel</label>
        <locationX>2514</locationX>
        <locationY>5576</locationY>
        <actionName>getResourcesForMnlScheduling</actionName>
        <actionType>getResourcesForMnlScheduling</actionType>
        <connector>
            <targetReference>GetWorkOrderTemplateRecurringVisit</targetReference>
        </connector>
        <faultConnector>
            <targetReference>GetServiceAppointmentTemplateWorkOrderRecurringVisit</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>visitType</name>
            <value>
                <elementReference>RecurringType</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>serviceAppointmentId</name>
            <value>
                <elementReference>ServiceAppointmentTemplateId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>schedulingPolicyId</name>
            <value>
                <elementReference>SchedulingPolicyPicklist</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>workTypeId</name>
            <value>
                <elementReference>workTypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recurrenceFrequencyType</name>
            <value>
                <elementReference>recurrenceType</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>visitsRequired</name>
            <value>
                <elementReference>VisitsRequiredNumber</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recurringDaysList</name>
            <value>
                <elementReference>recurrenceWeekDays</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>operatingHoursId</name>
            <value>
                <elementReference>OperatingHoursId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>resourceRecommendationCount</name>
            <value>
                <elementReference>ResourceRecommendationCount</elementReference>
            </value>
        </inputParameters>
        <nameSegment>getResourcesForMnlScheduling</nameSegment>
        <outputParameters>
            <assignToReference>resourceRecommendation</assignToReference>
            <name>manualSchedulingRecommendationResponse</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <description>$Label.ScheduleHomeVisitsFlow.GetResourcesforStartOfCareVisitManualSchedulingDesc</description>
        <name>GetResourcesforStartOfCareVisitManualScheduling</name>
        <label>$Label.ScheduleHomeVisitsFlow.GetResourcesforStartOfCareVisitManualScheduling</label>
        <locationX>10030</locationX>
        <locationY>4436</locationY>
        <actionName>getResourcesForMnlScheduling</actionName>
        <actionType>getResourcesForMnlScheduling</actionType>
        <connector>
            <targetReference>GetWorkOrderTemplate</targetReference>
        </connector>
        <faultConnector>
            <targetReference>GetServiceAppointmentTemplateWorkOrderStartOfCare</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>visitType</name>
            <value>
                <elementReference>StartOfCareType</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>serviceAppointmentId</name>
            <value>
                <elementReference>ServiceAppointmentTemplateId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>schedulingPolicyId</name>
            <value>
                <elementReference>SchedulingPolicyPicklist</elementReference>
            </value>
        </inputParameters>
        <nameSegment>getResourcesForMnlScheduling</nameSegment>
        <outputParameters>
            <assignToReference>resourceRecommendation</assignToReference>
            <name>manualSchedulingRecommendationResponse</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <description>Calls an action to schedule a home visit with a Service Appointment ID equal to Home VisitId from CreateHomeVisit, using the scheduling policy that the user selected in SchedulingPolicyPicklist on CollectVisitDetailsScreen.</description>
        <name>ScheduleHomeVisitManual</name>
        <label>Schedule Home Visit</label>
        <locationX>6738</locationX>
        <locationY>4034</locationY>
        <actionName>scheduleHomeVisit</actionName>
        <actionType>scheduleHomeVisit</actionType>
        <faultConnector>
            <targetReference>DisplayScheduleStartOfCareVisitErrorScreen</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>serviceAppointmentId</name>
            <value>
                <elementReference>CreateHomeVisit</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>schedulingPolicyId</name>
            <value>
                <elementReference>SchedulingPolicyPicklist</elementReference>
            </value>
        </inputParameters>
        <nameSegment>scheduleHomeVisit</nameSegment>
    </actionCalls>
    <actionCalls>
        <description>Calls an action to schedule a recurring home visit for the patient whose account record was passed into the flow, using user selections from  CollectVisitDetailsScreen.</description>
        <name>ScheduleRecurringVisit</name>
        <label>Schedule Recurring Visit</label>
        <locationX>50</locationX>
        <locationY>3338</locationY>
        <actionName>scheduleRecurringHomeVisit</actionName>
        <actionType>scheduleRecurringHomeVisit</actionType>
        <faultConnector>
            <targetReference>DisplayErrorScheduleRecurringVisitScreen</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>schedulingPolicyId</name>
            <value>
                <elementReference>SchedulingPolicyPicklist</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>startTime</name>
            <value>
                <elementReference>schedulingStartDateTime</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>endTime</name>
            <value>
                <elementReference>SchedulingEndDateTime</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>visitsRequired</name>
            <value>
                <elementReference>VisitsRequiredNumber</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>frequencyType</name>
            <value>
                <elementReference>recurrenceType</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>selectedDays</name>
            <value>
                <elementReference>recurrenceWeekDays</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>clinicalServiceRequestId</name>
            <value>
                <elementReference>clinicalServiceRequest</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>skills</name>
            <value>
                <elementReference>skillsListId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>operatingHoursId</name>
            <value>
                <elementReference>OperatingHoursId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>accountId</name>
            <value>
                <elementReference>recordId.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>serviceTerritoryId</name>
            <value>
                <elementReference>Region.recordId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>firstCareResourceSkillsIdsList</name>
            <value>
                <elementReference>CareResource1SkillIds</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>secondCareResourceSkillsIdsList</name>
            <value>
                <elementReference>CareResource2SkillIds</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>careResourceCount</name>
            <value>
                <elementReference>requriedCareResourcesCount</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>workTypeIdsList</name>
            <value>
                <elementReference>WorkTypeIds</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>usageType</name>
            <value>
                <elementReference>homeVisitDetails.source</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>visitSourceId</name>
            <value>
                <elementReference>homeVisitDetails.referenceId</elementReference>
            </value>
        </inputParameters>
        <nameSegment>scheduleRecurringHomeVisit</nameSegment>
        <outputParameters>
            <assignToReference>careServiceVisitPlanId</assignToReference>
            <name>careServiceVisitPlanId</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <description>$Label.ScheduleHomeVisitsFlow.ScheduleRecurringVisitManuallyDesc</description>
        <name>ScheduleRecurringVisitManually</name>
        <label>$Label.ScheduleHomeVisitsFlow.ScheduleRecurringVisitManuallyLabel</label>
        <locationX>2514</locationX>
        <locationY>6116</locationY>
        <actionName>scheduleHomeVisitsManually</actionName>
        <actionType>scheduleHomeVisitsManually</actionType>
        <faultConnector>
            <targetReference>ScreenDisplayErrorScheduleRecurringVisitManually</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>accountId</name>
            <value>
                <elementReference>recordId.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>visitType</name>
            <value>
                <elementReference>RecurringType</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>schedulingPolicyId</name>
            <value>
                <elementReference>SchedulingPolicyPicklist</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>operatingHoursId</name>
            <value>
                <elementReference>OperatingHoursId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>clinicalServiceRequestId</name>
            <value>
                <elementReference>clinicalServiceRequest</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>serviceTerritoryId</name>
            <value>
                <elementReference>Region.recordId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>firstVisitStartDateTime</name>
            <value>
                <elementReference>schedulingStartDateTime</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>firstVisitEndDateTime</name>
            <value>
                <elementReference>SchedulingEndDateTime</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>visitsRequired</name>
            <value>
                <elementReference>VisitsRequiredNumber</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recurrenceFrequencyType</name>
            <value>
                <elementReference>recurrenceType</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recurringDaysList</name>
            <value>
                <elementReference>recurrenceWeekDays</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>skillIds</name>
            <value>
                <elementReference>CareResource1SkillIds</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>resourceDetails</name>
            <value>
                <elementReference>SelectedResourceRecommendation</elementReference>
            </value>
        </inputParameters>
        <nameSegment>scheduleHomeVisitsManually</nameSegment>
        <outputParameters>
            <assignToReference>careServiceVisitPlanId</assignToReference>
            <name>careServiceVisitPlanId</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <description>$Label.ScheduleHomeVisitsFlow.ScheduleStartOfCareVisitManuallyDesc</description>
        <name>ScheduleStartOfCareVisitManually</name>
        <label>$Label.ScheduleHomeVisitsFlow.ScheduleStartOfCareVisitManuallyLabel</label>
        <locationX>10030</locationX>
        <locationY>4976</locationY>
        <actionName>scheduleHomeVisitsManually</actionName>
        <actionType>scheduleHomeVisitsManually</actionType>
        <faultConnector>
            <targetReference>ScreenDisplayErrorScheduleStartOfCareVisitManually</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>accountId</name>
            <value>
                <elementReference>recordId.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>visitType</name>
            <value>
                <elementReference>StartOfCareType</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>schedulingPolicyId</name>
            <value>
                <elementReference>SchedulingPolicyPicklist</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>operatingHoursId</name>
            <value>
                <elementReference>OperatingHoursId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>clinicalServiceRequestId</name>
            <value>
                <elementReference>clinicalServiceRequest</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>serviceTerritoryId</name>
            <value>
                <elementReference>Region.recordId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>firstVisitStartDateTime</name>
            <value>
                <elementReference>startDateStartTime</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>firstVisitEndDateTime</name>
            <value>
                <elementReference>startDateEndTime</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>skillIds</name>
            <value>
                <elementReference>CareResource1SkillIds</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>resourceDetails</name>
            <value>
                <elementReference>SelectedResourceRecommendation</elementReference>
            </value>
        </inputParameters>
        <nameSegment>scheduleHomeVisitsManually</nameSegment>
        <outputParameters>
            <assignToReference>careServiceVisitPlanId</assignToReference>
            <name>careServiceVisitPlanId</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>careServiceVisitId</assignToReference>
            <name>careServiceVisitId</name>
        </outputParameters>
    </actionCalls>
    <apiVersion>62.0</apiVersion>
    <assignments>
        <description>Sets the ApprovedVisitCount variable to 0.</description>
        <name>SetApprovedVisitCountToZero</name>
        <label>Set Approved Visit Count to Zero</label>
        <locationX>1920</locationX>
        <locationY>2522</locationY>
        <assignmentItems>
            <assignToReference>ApprovedVisitCount</assignToReference>
            <operator>Assign</operator>
            <value>
                <numberValue>0.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SetAuthorizationRequirement</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>$Label.ScheduleHomeVisitsFlow.SetAuthorizationRequiredDesc</description>
        <name>SetAuthorizationRequirement</name>
        <label>$Label.ScheduleHomeVisitsFlow.SetAuthorizationRequiredLabel</label>
        <locationX>2052</locationX>
        <locationY>2714</locationY>
        <assignmentItems>
            <assignToReference>IsAuthorizationRequired</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>AuthorizationRequiredCheckbox</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>UpdateVisitsRequiredCount</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets complex visit variables for the primary visit.</description>
        <name>SetComplexVisitVariablesPrimaryVisit</name>
        <label>Set Complex Visit Variables for Primary Visit</label>
        <locationX>6738</locationX>
        <locationY>2414</locationY>
        <assignmentItems>
            <assignToReference>ComplexVisitSkillIds</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>CareResource1SkillIds</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>RelatedVisitId</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>RelatedVisitType</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>None</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>IterateOverWorkTypeIds</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets complex visit variables for the secondary visit.</description>
        <name>SetComplexVisitVariablesSecondaryVisit</name>
        <label>Set Complex Visit Variables for Secondary Visit</label>
        <locationX>6826</locationX>
        <locationY>3710</locationY>
        <assignmentItems>
            <assignToReference>ComplexVisitSkillIds</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>CareResource2SkillIds</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>RelatedVisitId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>careServiceVisitId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>RelatedVisitType</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Dependent</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>IterateOverWorkTypeIds</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets DefaultVisitType to RecurringVisitChoice.</description>
        <name>SetDefaultVisitType</name>
        <label>Set Default Visit Type</label>
        <locationX>9125</locationX>
        <locationY>242</locationY>
        <assignmentItems>
            <assignToReference>DefaultVisitType</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>RecurringVisitChoice</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>GetAssociatedLocation</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>$Label.ScheduleHomeVisitsFlow.SetIsHomeVisitCoverageBenefitActiveDesc</description>
        <name>SetIsHomeVisitCoverageBenefitActive</name>
        <label>$Label.ScheduleHomeVisitsFlow.SetIsHomeVisitCoverageBenefitActive</label>
        <locationX>9213</locationX>
        <locationY>1190</locationY>
        <assignmentItems>
            <assignToReference>IsHomeVisitCoverageBenefitActive</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>IterateOverCoverageBenefits</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>$Label.ScheduleHomeVisitsFlow.SetManualAssignmentForMultiResourcesDesc</description>
        <name>SetManualAssignmentForMultiResources</name>
        <label>$Label.ScheduleHomeVisitsFlow.SetManualAssignmentForMultiResourcesLabel</label>
        <locationX>9257</locationX>
        <locationY>1658</locationY>
        <assignmentItems>
            <assignToReference>IsManualAssignmentForMultiResources</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>ManualAssignmentForMultiResourcesFormula</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>IsManualAssignmentForSingleResource</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>$Label.ScheduleHomeVisitsFlow.SetOperatingHoursSchedulingPreferenceDesc</description>
        <name>SetOperatingHoursSchedulingPreference</name>
        <label>$Label.ScheduleHomeVisitsFlow.SetOperatingHoursSchedulingPreferenceLabel</label>
        <locationX>5594</locationX>
        <locationY>3446</locationY>
        <assignmentItems>
            <assignToReference>OperatingHoursSchedulingPreference</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>SelectVisitDetailsRecurringVisitScreen</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>$Label.ScheduleHomeVisitsFlow.SetServiceAppointmentTemplateCommentDesc</description>
        <name>SetServiceAppointmentTemplateComment</name>
        <label>$Label.ScheduleHomeVisitsFlow.SetServiceAppointmentTemplateCommentLabel</label>
        <locationX>10030</locationX>
        <locationY>2306</locationY>
        <assignmentItems>
            <assignToReference>ServiceAppointmentTemplateComment</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>ServiceAppointmentTemplateCommentFormula</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>GetServiceAppointmentTemplate</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>$Label.ScheduleHomeVisitsFlow.SetServiceAppointmentTemplateCommentRecurringVisitDesc</description>
        <name>SetServiceAppointmentTemplateCommentRecurringVisit</name>
        <label>$Label.ScheduleHomeVisitsFlow.SetSATemplateCommentRecurringVisitLabel</label>
        <locationX>2514</locationX>
        <locationY>3446</locationY>
        <assignmentItems>
            <assignToReference>ServiceAppointmentTemplateComment</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>ServiceAppointmentTemplateCommentFormula</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>GetServiceAppointmentTemplateRecurringVisit</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets ServiceAppointmentForWorkOrderTemplateCount to the number of record IDs in the ServiceAppointmentsForWorkOrderTemplates collection.</description>
        <name>SetServiceAppointmentWorkOrderRecurringVisitCount</name>
        <label>Set Service Appointment Count</label>
        <locationX>2602</locationX>
        <locationY>4310</locationY>
        <assignmentItems>
            <assignToReference>ServiceAppointmentForWorkOrderTemplateCount</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>ServiceAppointmentsForWorkOrderTemplates</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>ShouldDeleteWorkOrderTemplatesRecurringVisit</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets ServiceAppointmentsForWorkOrderTemplateCount to the number of record IDs in the ServiceAppointmentsForWorkOrderTemplates collection.</description>
        <name>SetServiceAppointmentWorkOrderTemplateCount</name>
        <label>Set Service Appointment Count</label>
        <locationX>10118</locationX>
        <locationY>3170</locationY>
        <assignmentItems>
            <assignToReference>ServiceAppointmentForWorkOrderTemplateCount</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>ServiceAppointmentsForWorkOrderTemplates</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>ShouldDeleteWorkOrdersStartOfCare</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets VisitRequired to 1.</description>
        <name>SetVisitsRequiredCount</name>
        <label>Set Visits Required Count</label>
        <locationX>1920</locationX>
        <locationY>2930</locationY>
        <assignmentItems>
            <assignToReference>VisitRequired</assignToReference>
            <operator>Assign</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SelectVisitDetailsRecurringVisitScreen</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets VisitRequired to Null.</description>
        <name>SetVisitsRequiredCountToNull</name>
        <label>Set Visits Required Count</label>
        <locationX>2184</locationX>
        <locationY>2930</locationY>
        <assignmentItems>
            <assignToReference>VisitRequired</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <connector>
            <targetReference>SelectVisitDetailsRecurringVisitScreen</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Subtracts the CreatedVisitCount field of Care Service Visit Plan from GetCreatedVisitCount from the ApprovedVisitCount variable.</description>
        <name>UpdateApprovedVisitCount</name>
        <label>Update Approved Visit Count</label>
        <locationX>2052</locationX>
        <locationY>2306</locationY>
        <assignmentItems>
            <assignToReference>ApprovedVisitCount</assignToReference>
            <operator>Subtract</operator>
            <value>
                <elementReference>GetNewClinicalServiceRequest.CreatedVisitCount</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>IsApprovedVisitCountNegative</targetReference>
        </connector>
    </assignments>
    <choices>
        <description>$Label.ScheduleHomeVisitsFlow.AutoAssignDesc</description>
        <name>ChoiceAutoAssignment</name>
        <choiceText>Auto</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Auto Assign</stringValue>
        </value>
    </choices>
    <choices>
        <description>$Label.ScheduleHomeVisitsFlow.AssignRecommendationsDesc</description>
        <name>ChoiceManualAssignment</name>
        <choiceText>Manual</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Recommendations</stringValue>
        </value>
    </choices>
    <choices>
        <description>$Label.ScheduleHomeVisitsFlow.RecurringVisitDesc</description>
        <name>RecurringVisitChoice</name>
        <choiceText>Recurring</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Recurring</stringValue>
        </value>
    </choices>
    <choices>
        <description>$Label.ScheduleHomeVisitsFlow.SOCVisitDesc</description>
        <name>StartOfCareVisitChoice</name>
        <choiceText>&lt;span style=&quot;font-size: 13px;&quot;&gt;Start of Care Visit&lt;/span&gt;</choiceText>
        <dataType>String</dataType>
    </choices>
    <constants>
        <description>Stores the status value that indicates that a patient member&apos;s plan record is active. If your org uses something other than &quot;Active&quot; to denote the active status of a member plan, change the value of this constant before activating the flow.</description>
        <name>ActiveMemberPlanStatus</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Active</stringValue>
        </value>
    </constants>
    <constants>
        <description>Stores a Boolean value that indicates an authorization check is required to schedule home visits. To not require authorization before scheduling home healthcare visits, change this value to False. To dynamically determine whether authorization is required before scheduling a home healthcare visit, convert this constant into a Boolean variable that&apos;s available for input to the flow.</description>
        <name>AuthorizationCheckRequired</name>
        <dataType>Boolean</dataType>
        <value>
            <booleanValue>true</booleanValue>
        </value>
    </constants>
    <constants>
        <description>Stores the name of the home health scheduling policy to use for the default value of SchedulingPolicyPicklist in CollectVisitDetailsScreen. To use a different home health scheduling policy as the default, change &quot;Home Health Default Scheduling Policy&quot; to the name of the home health scheduling policy to use as the default value of  SchedulingPolicyPicklist in CollectVisitDetailsScreen.</description>
        <name>DefaultSchedulingPolicyName</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Home Health Default Scheduling Policy</stringValue>
        </value>
    </constants>
    <constants>
        <description>Stores the value for coverage type of home health visits. If your org uses something other than &quot;Home Health&quot; to denote home health visit coverage, change the value of this constant before activating the flow.</description>
        <name>HomeHealthCoverageType</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Home Health</stringValue>
        </value>
    </constants>
    <constants>
        <description>$Label.ScheduleHomeVisitsFlow.ManualAssignmentTypeDesc</description>
        <name>ManualAssignmentType</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Manual</stringValue>
        </value>
    </constants>
    <constants>
        <description>Stores the text to be used as the default value to indicate that the home visit source is a patient request.</description>
        <name>PatientRequestVisitSource</name>
        <dataType>String</dataType>
        <value>
            <stringValue>PatientRequest</stringValue>
        </value>
    </constants>
    <constants>
        <description>$Label.ScheduleHomeVisitsFlow.RecurringTypeDesc</description>
        <name>RecurringType</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Recurring</stringValue>
        </value>
    </constants>
    <constants>
        <description>$Label.ScheduleHomeVisitsFlow.ServiceAppointmentTemplateCommentPrefixDesc</description>
        <name>ServiceAppointmentTemplateCommentPrefix</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Service Appointment Template</stringValue>
        </value>
    </constants>
    <constants>
        <description>Stores the care type text for a Start of Care visit. If your org uses something other than &quot;StartOfCare&quot; to denote a start of care type of visit, change the value of this constant before activating the flow.</description>
        <name>StartOfCareType</name>
        <dataType>String</dataType>
        <value>
            <stringValue>StartOfCare</stringValue>
        </value>
    </constants>
    <constants>
        <description>$Label.ScheduleHomeVisitsFlow.StartOfCareVisitsRequiredDesc</description>
        <name>StartOfCareVisitsRequired</name>
        <dataType>Number</dataType>
        <value>
            <numberValue>1.0</numberValue>
        </value>
    </constants>
    <decisions>
        <description>Determines whether to delete the service appointment records by checking if the Comment field of the record in the loop is set to the value of  {formula variable name}.</description>
        <name>DeleteServiceAppointmentTemplates</name>
        <label>Delete Service Appointment Templates?</label>
        <locationX>10646</locationX>
        <locationY>2846</locationY>
        <defaultConnector>
            <targetReference>IterateOverServiceAppointmentTemplates</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No (Default)</defaultConnectorLabel>
        <rules>
            <name>ShouldDeleteServiceAppointmentTemplates</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IterateOverServiceAppointmentTemplates.Comments</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>ServiceAppointmentTemplateCommentCreatedDateFormula</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>DeleteServiceAppointmentTemplatesStartOfCare</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>$Label.ScheduleHomeVisitsFlow.DoesServiceAppointmentTemplateExistDesc</description>
        <name>DoesServiceAppointmentTemplateExist</name>
        <label>$Label.ScheduleHomeVisitsFlow.DoesServiceAppointmentTemplateExistLabel</label>
        <locationX>10030</locationX>
        <locationY>2522</locationY>
        <defaultConnector>
            <targetReference>CreateTemplateRecords</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>$Label.ScheduleHomeVisitsFlow.ManualAssignmentNoLabel</defaultConnectorLabel>
        <rules>
            <name>ServiceAppointmentTemplateExists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ServiceAppointmentTemplateId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>NullText</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetServiceAppointmentTemplatesStartOfCare</targetReference>
            </connector>
            <label>$Label.ScheduleHomeVisitsFlow.ManualAssignmentYesLabel</label>
        </rules>
    </decisions>
    <decisions>
        <description>$Label.ScheduleHomeVisitsFlow.DoesServiceAppointmentTemplateRecurringVisitExistDesc</description>
        <name>DoesServiceAppointmentTemplateRecurringVisitExist</name>
        <label>$Label.ScheduleHomeVisitsFlow.DoesServiceAppointmentTemplateExistLabel</label>
        <locationX>2514</locationX>
        <locationY>3662</locationY>
        <defaultConnector>
            <targetReference>CreateTemplateRecordsRecurringVisit</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>$Label.ScheduleHomeVisitsFlow.ManualAssignmentNoLabel</defaultConnectorLabel>
        <rules>
            <name>ServiceAppointmentTemplateRecurringVisitExists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ServiceAppointmentTemplateId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>NullText</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetServiceAppointmentTemplatesRecurringVisit</targetReference>
            </connector>
            <label>$Label.ScheduleHomeVisitsFlow.ManualAssignmentYesLabel</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether more than 1 care professional is needed for the visit.</description>
        <name>Have2CareResources</name>
        <label>Have 2 Care Resources?</label>
        <locationX>6958</locationX>
        <locationY>3602</locationY>
        <defaultConnector>
            <targetReference>IterateOverWorkTypeIds</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No (Default)</defaultConnectorLabel>
        <rules>
            <name>Has2CareResources</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>requriedCareResourcesCount</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>1.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetComplexVisitVariablesSecondaryVisit</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>$Label.ScheduleHomeVisitsFlow.HaveAssociatedActiveMemberPlanDesc</description>
        <name>HaveAssociatedActiveMemberPlan</name>
        <label>$Label.ScheduleHomeVisitsFlow.HaveAssociatedActiveMemberPlan</label>
        <locationX>9345</locationX>
        <locationY>1082</locationY>
        <defaultConnector>
            <targetReference>IterateOverCoverageBenefits</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>HaveActiveMemberPlan</name>
            <conditionLogic>1 AND (2 OR 4) AND (3 OR 5)</conditionLogic>
            <conditions>
                <leftValueReference>IterateOverCoverageBenefits.MemberPlan.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>ActiveMemberPlanStatus</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IterateOverCoverageBenefits.MemberPlan.EffectiveTo</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>$Flow.CurrentDate</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IterateOverCoverageBenefits.MemberPlan.EffectiveFrom</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>$Flow.CurrentDate</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IterateOverCoverageBenefits.MemberPlan.EffectiveTo</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IterateOverCoverageBenefits.MemberPlan.EffectiveFrom</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetIsHomeVisitCoverageBenefitActive</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether the flow user set an end date and time for the visit to be scheduled.</description>
        <name>HaveEndDateAndTime</name>
        <label>Have End Date and Time?</label>
        <locationX>6430</locationX>
        <locationY>2306</locationY>
        <defaultConnector>
            <targetReference>SetComplexVisitVariablesPrimaryVisit</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Yes (Default)</defaultConnectorLabel>
        <rules>
            <name>HasNoEndDateTiime</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>startDateEndTime</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>endDateNull</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>DisplayErrorTimeslotScreen</targetReference>
            </connector>
            <label>No</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether the reference ID of the home visit was passed into the flow by checking if the referenceId field in homeVisitDetails has a value.</description>
        <name>HaveHomeVisitReferenceId</name>
        <label>Have Home Visit Reference ID?</label>
        <locationX>9257</locationX>
        <locationY>134</locationY>
        <defaultConnector>
            <targetReference>GetAssociatedLocation</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>HasHomeVisitReferenceId</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>homeVisitDetails.referenceId</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetDefaultVisitType</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether the updated visit count in ApprovedVisitCount is negative.</description>
        <name>IsApprovedVisitCountNegative</name>
        <label>Is Approved Visit Count Negative</label>
        <locationX>2052</locationX>
        <locationY>2414</locationY>
        <defaultConnector>
            <targetReference>SetAuthorizationRequirement</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No (Default)</defaultConnectorLabel>
        <rules>
            <name>IsNegative</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ApprovedVisitCount</leftValueReference>
                <operator>LessThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetApprovedVisitCountToZero</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>$Label.ScheduleHomeVisitsFlow.IsManualAssignmentForSingleResourceDesc</description>
        <name>IsManualAssignmentForSingleResource</name>
        <label>$Label.ScheduleHomeVisitsFlow.IsManualAssignmentForSingleResourceLabel</label>
        <locationX>9257</locationX>
        <locationY>1766</locationY>
        <defaultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>SelectVisitDetailsScreen</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>$Label.ScheduleHomeVisitsFlow.ManualAssignmentNoLabel</defaultConnectorLabel>
        <rules>
            <name>ManualAssignmentSingleResource</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>IsManualAssignmentForMultiResources</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetClinicalServiceRequest</targetReference>
            </connector>
            <label>$Label.ScheduleHomeVisitsFlow.ManualAssignmentYesLabel</label>
        </rules>
    </decisions>
    <decisions>
        <description>$Label.ScheduleHomeVisitsFlow.IsRecurringAutoResourceAssignmentDesc</description>
        <name>IsRecurringAutoResourceAssignment</name>
        <label>$Label.ScheduleHomeVisitsFlow.IsRecurringAutoResourceAssignmentLabel</label>
        <locationX>2052</locationX>
        <locationY>3230</locationY>
        <defaultConnector>
            <targetReference>IsSchedulingPreferenceSetToOperatingHours</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>$Label.ScheduleHomeVisitsFlow.ManualAssignmentNoLabel</defaultConnectorLabel>
        <rules>
            <name>RecurringAutoAssignment</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ResourceAssignmentRadioButton</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>ChoiceAutoAssignment</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ScheduleRecurringVisit</targetReference>
            </connector>
            <label>$Label.ScheduleHomeVisitsFlow.ManualAssignmentYesLabel</label>
        </rules>
    </decisions>
    <decisions>
        <description>$Label.ScheduleHomeVisitsFlow.IsSchedulingPreferenceSetToOperatingHoursDesc</description>
        <name>IsSchedulingPreferenceSetToOperatingHours</name>
        <label>$Label.ScheduleHomeVisitsFlow.IsSchedulingPreferenceSetToOperatingHoursLabel</label>
        <locationX>4054</locationX>
        <locationY>3338</locationY>
        <defaultConnector>
            <targetReference>SetOperatingHoursSchedulingPreference</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>$Label.ScheduleHomeVisitsFlow.ManualAssignmentNoLabel</defaultConnectorLabel>
        <rules>
            <name>SchedulingPreferenceIsOperatingHours</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>OperatingHoursId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetServiceAppointmentTemplateCommentRecurringVisit</targetReference>
            </connector>
            <label>$Label.ScheduleHomeVisitsFlow.ManualAssignmentYesLabel</label>
        </rules>
    </decisions>
    <decisions>
        <description>$Label.ScheduleHomeVisitsFlow.IsStartOfCareAutoResourceAssignmentDesc</description>
        <name>IsStartOfCareAutoResourceAssignment</name>
        <label>$Label.ScheduleHomeVisitsFlow.IsStartOfCareAutoResourceAssignmentLabel</label>
        <locationX>8230</locationX>
        <locationY>2198</locationY>
        <defaultConnector>
            <targetReference>SetServiceAppointmentTemplateComment</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>$Label.ScheduleHomeVisitsFlow.ManualAssignmentNoLabel</defaultConnectorLabel>
        <rules>
            <name>StartOfCareAutoAssignment</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ResourceAssignmentRadioButton</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>ChoiceAutoAssignment</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>HaveEndDateAndTime</targetReference>
            </connector>
            <label>$Label.ScheduleHomeVisitsFlow.ManualAssignmentYesLabel</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether the flow user selected Recurring Visit in VisitTypePicklist on CollectVisitDetailsScreen.</description>
        <name>IsVisitRecurring</name>
        <label>Is Visit Recurring?</label>
        <locationX>5141</locationX>
        <locationY>1982</locationY>
        <defaultConnector>
            <targetReference>SelectVisitTimeStartCareScreen</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No (Default)</defaultConnectorLabel>
        <rules>
            <name>IsRecurring</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>VisitTypePicklist</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>RecurringVisitChoice</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetCareRequestItem</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>$Label.ScheduleHomeVisitsFlow.ShouldCheckAuthorizationDesc</description>
        <name>ShouldCheckAuthorization</name>
        <label>$Label.ScheduleHomeVisitsFlow.ShouldCheckAuthorization</label>
        <locationX>9257</locationX>
        <locationY>758</locationY>
        <defaultConnector>
            <targetReference>SelectVisitDetailsScreen</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>ShouldCheck</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>AuthorizationCheckRequired</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetCoverageBenefits</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether to delete the service appointment records by checking if the Comment field of the record in the loop is set to the value of  ServiceAppointmentTemplateCommentCreatedDateRecurringVisitFormula.</description>
        <name>ShouldDeleteServiceAppointmentTemplatesRecurringVisit</name>
        <label>Should Delete Service Appointment Templates?</label>
        <locationX>3130</locationX>
        <locationY>3986</locationY>
        <defaultConnector>
            <targetReference>IterateOverServiceAppointmentTemplatesRecurringVisit</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No (Default)</defaultConnectorLabel>
        <rules>
            <name>ShouldDeleteServiceAppointmentTemplateRecurringVisitRecords</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IterateOverServiceAppointmentTemplatesRecurringVisit.Comments</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>ServiceAppointmentTemplateCommentCreatedDateRecurringVisitFormula</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>DeleteServiceAppointmentTemplatesRecurringVisit</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether to delete the work order records by checking if ServiceAppointmentForWorkOrderTemplateCount is equal to 0.</description>
        <name>ShouldDeleteWorkOrdersStartOfCare</name>
        <label>Should Delete Work Order Templates?</label>
        <locationX>10118</locationX>
        <locationY>3278</locationY>
        <defaultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>CreateTemplateRecords</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No (Default)</defaultConnectorLabel>
        <rules>
            <name>ShouldDeleteWorkOrderTemplates</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ServiceAppointmentForWorkOrderTemplateCount</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>DeleteWorkOrderTemplatesStartOfCare</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether to delete the work order records by checking if ServiceAppointmentForWorkOrderTemplateCount is equal to 0.</description>
        <name>ShouldDeleteWorkOrderTemplatesRecurringVisit</name>
        <label>Should Delete Work Order Templates?</label>
        <locationX>2602</locationX>
        <locationY>4418</locationY>
        <defaultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>CreateTemplateRecordsRecurringVisit</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No (Default)</defaultConnectorLabel>
        <rules>
            <name>ShouldDeleteRecurringVisitWorkOrderTemplates</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ServiceAppointmentForWorkOrderTemplateCount</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>DeleteWorkOrderTemplatesRecurringVisit</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether to update the count of the required visits by checking if source of homeVisitDetails matches PatientRequestVisitSource and DisableVisitsRequiredFieldFormula is False.</description>
        <name>UpdateVisitsRequiredCount</name>
        <label>Update Visits Required Count?</label>
        <locationX>2052</locationX>
        <locationY>2822</locationY>
        <defaultConnector>
            <targetReference>SetVisitsRequiredCountToNull</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No (Default)</defaultConnectorLabel>
        <rules>
            <name>ShouldUpdateVisitsRequiredCount</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>homeVisitDetails.source</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>PatientRequestVisitSource</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>DisableVisitsRequiredFieldFormula</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetVisitsRequiredCount</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <dynamicChoiceSets>
        <description>$Label.ScheduleHomeVisitsFlow.SchedulingPolicyRecordChoiceSetDesc</description>
        <name>SchedulingPolicyRecordChoiceSet</name>
        <dataType>String</dataType>
        <displayField>Name</displayField>
        <object>FSL__Scheduling_Policy__c</object>
        <valueField>Id</valueField>
    </dynamicChoiceSets>
    <environments>Default</environments>
    <formulas>
        <description>This formula isn&apos;t used in the flow. If you&apos;ve removed the VisitRequired variable (also unused in the flow), you can remove this formula.</description>
        <name>AuthVisitsValidation</name>
        <dataType>Boolean</dataType>
        <expression>{!ApprovedVisitCount} &gt;= {!VisitRequired}</expression>
    </formulas>
    <formulas>
        <description>$Label.ScheduleHomeVisitsFlow.DisableVisitsRequiredFieldFormulaDesc</description>
        <name>DisableVisitsRequiredFieldFormula</name>
        <dataType>Boolean</dataType>
        <expression>{!IsAuthorizationRequired} &amp;&amp; ({!ApprovedVisitCount}=0)</expression>
    </formulas>
    <formulas>
        <description>$Label.ScheduleHomeVisitsFlow.ManualAssignmentForMultiResourcesFormulaDesc</description>
        <name>ManualAssignmentForMultiResourcesFormula</name>
        <dataType>Boolean</dataType>
        <expression>{!ResourceAssignmentRadioButton}={!ChoiceManualAssignment} &amp;&amp; {!requriedCareResourcesCount} &gt; 1</expression>
    </formulas>
    <formulas>
        <description>Derives the service appointment template comment by combining the values of ServiceAppointmentTemplateCommentPrefix constant, {!$Flow.InterviewGuid}, and record created date.</description>
        <name>ServiceAppointmentTemplateCommentCreatedDateFormula</name>
        <dataType>String</dataType>
        <expression>{!ServiceAppointmentTemplateCommentPrefix}&amp;&apos;_&apos;&amp;{!$Flow.InterviewGuid}&amp;&apos;_&apos;&amp;TEXT(UNIXTIMESTAMP({!IterateOverServiceAppointmentTemplates.CreatedDate}))</expression>
    </formulas>
    <formulas>
        <description>Derives the service appointment template comment by combining the values of ServiceAppointmentTemplateCommentPrefix constant, {!$Flow.InterviewGuid}, and the record created date.</description>
        <name>ServiceAppointmentTemplateCommentCreatedDateRecurringVisitFormula</name>
        <dataType>String</dataType>
        <expression>{!ServiceAppointmentTemplateCommentPrefix}&amp;&apos;_&apos;&amp;{!$Flow.InterviewGuid} &amp;&apos;_&apos;&amp;TEXT(UNIXTIMESTAMP({!IterateOverServiceAppointmentTemplatesRecurringVisit.CreatedDate}))</expression>
    </formulas>
    <formulas>
        <description>$Label.ScheduleHomeVisitsFlow.ServiceAppointmentTemplateCommentFormulaDesc</description>
        <name>ServiceAppointmentTemplateCommentFormula</name>
        <dataType>String</dataType>
        <expression>{!ServiceAppointmentTemplateCommentPrefix}&amp;&apos;_&apos;&amp;{!$Flow.InterviewGuid}</expression>
    </formulas>
    <formulas>
        <description>Calculates whether the number of visits specified for the VisitsRequiredNumber field is valid. Returns true when AuthorizationRequiredCheckbox is selected, ApprovedVisitCount is greater than or equal to VisitRequiredNumber, and VisitRequiredNumber is greater than 0. Also returns true when AuthorziationRequiredCheckbox isn&apos;t selected and VisitRequiredNumber is greater than 0.</description>
        <name>ValidateVisitsRequiredFormula</name>
        <dataType>Boolean</dataType>
        <expression>({!VisitsRequiredNumber} &gt; 0)  &amp;&amp; (NOT({!AuthorizationRequiredCheckbox}) || ({!AuthorizationRequiredCheckbox} &amp;&amp;  NOT(ISNULL({!ApprovedVisitCount}))  &amp;&amp; {!ApprovedVisitCount} &gt;= {!VisitsRequiredNumber}))</expression>
    </formulas>
    <formulas>
        <description>$Label.ScheduleHomeVisitsFlow.VisitsRequiredFieldErrorMessageFormulaDesc</description>
        <name>VisitRequiredErrorMessageFormula</name>
        <dataType>String</dataType>
        <expression>IF({!IsAuthorizationRequired}, IF(({!ApprovedVisitCount} &gt; 0),&quot;Select a number greater than 0 and less than or equal to &quot; +
TEXT({!ApprovedVisitCount}),&quot;&quot;), IF({!ApprovedVisitCount}=0,&quot;Select a number greater than 0&quot;,&quot;&quot;))</expression>
    </formulas>
    <interviewLabel>Schedule Home Healthcare Visit {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Schedule Home Healthcare Visit</label>
    <loops>
        <description>$Label.ScheduleHomeVisitsFlow.IterateOverCoverageBenefitsDesc</description>
        <name>IterateOverCoverageBenefits</name>
        <label>$Label.ScheduleHomeVisitsFlow.IterateOverCoverageBenefits</label>
        <locationX>9125</locationX>
        <locationY>974</locationY>
        <collectionReference>GetCoverageBenefits</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>HaveAssociatedActiveMemberPlan</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>SelectVisitDetailsScreen</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <description>Repeats actions for each service appointment record in ServiceAppointmentTemplates.</description>
        <name>IterateOverServiceAppointmentTemplates</name>
        <label>Iterate Over Service AppointmentTemplates</label>
        <locationX>9766</locationX>
        <locationY>2738</locationY>
        <collectionReference>ServiceAppointmentTemplates</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>DeleteServiceAppointmentTemplates</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>CreateTemplateRecords</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <description>Repeats actions for each service appointment record in ServiceAppointmentTemplates.</description>
        <name>IterateOverServiceAppointmentTemplatesRecurringVisit</name>
        <label>Iterate Over Service Appointment Templates</label>
        <locationX>2250</locationX>
        <locationY>3878</locationY>
        <collectionReference>ServiceAppointmentTemplates</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>ShouldDeleteServiceAppointmentTemplatesRecurringVisit</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>CreateTemplateRecordsRecurringVisit</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <description>Repeats actions in a loop for each item in the workTypeIds collection.</description>
        <name>IterateOverWorkTypeIds</name>
        <label>Iterate Over Work Type IDs</label>
        <locationX>6738</locationX>
        <locationY>2522</locationY>
        <collectionReference>WorkTypeIds</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>CreateWorkOrder</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>ScheduleHomeVisitManual</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <description>Repeats actions in a loop for each ID in selectedAdditionalSkillIds.</description>
        <name>IterateThroughAdditionalSkills</name>
        <label>Iterate Through Additional Skills</label>
        <locationX>6958</locationX>
        <locationY>2738</locationY>
        <collectionReference>ComplexVisitSkillIds</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>CreateSkillRequirement</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>CreateHomeVisit</targetReference>
        </noMoreValuesConnector>
    </loops>
    <overriddenFlow>homehealth_flows__ScheduleHomeVisits</overriddenFlow>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordCreates>
        <description>Creates a care service visit junction record, setting ServiceRequestId to selectedClinicalServiceRequestId, VisitId to Home VisitId from CreateHomeVisit, and VisitType to StartOfCareType. Stores the ID of the new record in Care Service VisitId from CreateCareServiceVisit. If your org uses something other than &quot;StartOfCare&quot; to denote a start of care type of visit, change the value of the StartOfCareType constant.</description>
        <name>CreateCareServiceVisits</name>
        <label>Create Care Service Visits</label>
        <locationX>6958</locationX>
        <locationY>3494</locationY>
        <assignRecordIdToReference>careServiceVisitId</assignRecordIdToReference>
        <connector>
            <targetReference>Have2CareResources</targetReference>
        </connector>
        <faultConnector>
            <targetReference>RollBackRecordsCareServiceVisit</targetReference>
        </faultConnector>
        <inputAssignments>
            <field>AccountId</field>
            <value>
                <elementReference>recordId.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RelatedVisitId__NotFound</field>
            <value>
                <elementReference>RelatedVisitId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RelatedVisitType</field>
            <value>
                <elementReference>RelatedVisitType</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ServiceRequestId</field>
            <value>
                <elementReference>clinicalServiceRequest</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SourceReferenceRecordId__NotFound</field>
            <value>
                <elementReference>homeVisitDetails.referenceId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>VisitId</field>
            <value>
                <elementReference>CreateHomeVisit</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>VisitType</field>
            <value>
                <elementReference>StartOfCareType</elementReference>
            </value>
        </inputAssignments>
        <object>CareServiceVisit</object>
    </recordCreates>
    <recordCreates>
        <description>Creates a home visit record, setting DueDate to startVisitEndDateTime, EarliestStartTime to startVisitStartDateTime, ParentRecordId to Home Care ServiceId from CreateWorkOrder, WorkTypeId to selectedWorkTypeId, and address fields to related values from accountRecord. Stores the ID of the new record in Home VisitId from CreateHomeVisit.</description>
        <name>CreateHomeVisit</name>
        <label>Create Home Visit</label>
        <locationX>6958</locationX>
        <locationY>3386</locationY>
        <connector>
            <targetReference>CreateCareServiceVisits</targetReference>
        </connector>
        <faultConnector>
            <targetReference>RollBackRecordsHomeVisit</targetReference>
        </faultConnector>
        <inputAssignments>
            <field>City</field>
            <value>
                <elementReference>recordId.ShippingCity</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Country</field>
            <value>
                <elementReference>recordId.ShippingCountry</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>DueDate</field>
            <value>
                <elementReference>startDateEndTime</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>EarliestStartTime</field>
            <value>
                <elementReference>startDateStartTime</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ParentRecordId</field>
            <value>
                <elementReference>CreateWorkOrder</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>PostalCode</field>
            <value>
                <elementReference>recordId.ShippingPostalCode</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>State</field>
            <value>
                <elementReference>recordId.ShippingState</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Street</field>
            <value>
                <elementReference>recordId.ShippingStreet</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WorkTypeId</field>
            <value>
                <elementReference>IterateOverWorkTypeIds</elementReference>
            </value>
        </inputAssignments>
        <object>ServiceAppointment</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <description>Creates a skill requirement record, setting RelatedRecordId to the ID in Home Care ServiceID from CreateWorkOrder and SkillId to the  current item in the loop.</description>
        <name>CreateSkillRequirement</name>
        <label>Create Skill Requirement</label>
        <locationX>7046</locationX>
        <locationY>2846</locationY>
        <connector>
            <targetReference>IterateThroughAdditionalSkills</targetReference>
        </connector>
        <faultConnector>
            <targetReference>RollBackRecordsCreateSkillRequirement</targetReference>
        </faultConnector>
        <inputAssignments>
            <field>RelatedRecordId</field>
            <value>
                <elementReference>CreateWorkOrder</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SkillId</field>
            <value>
                <elementReference>IterateThroughAdditionalSkills</elementReference>
            </value>
        </inputAssignments>
        <object>SkillRequirement</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <description>Creates a home care service record for the patient’s visit, setting AccountId to the ID of accountRecord passed into the flow, ServiceTerritoryId to the ID of the record that the user selected in RegionLookup on SelectVisitDetailsScreen, and WorkTypeId to selectedWorkTypeId. Stores the ID of the new record in the Home Care ServiceID from CreateWorkOrder variable.</description>
        <name>CreateWorkOrder</name>
        <label>Create Work Order</label>
        <locationX>6958</locationX>
        <locationY>2630</locationY>
        <connector>
            <targetReference>IterateThroughAdditionalSkills</targetReference>
        </connector>
        <faultConnector>
            <targetReference>DisplayErrorWorkOrderScreen</targetReference>
        </faultConnector>
        <inputAssignments>
            <field>AccountId</field>
            <value>
                <elementReference>recordId.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ServiceTerritoryId</field>
            <value>
                <elementReference>Region.recordId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WorkTypeId</field>
            <value>
                <elementReference>IterateOverWorkTypeIds</elementReference>
            </value>
        </inputAssignments>
        <object>WorkOrder</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordDeletes>
        <description>$Label.ScheduleHomeVisitsFlow.DeleteServiceAppointmentTemplateDesc</description>
        <name>DeleteServiceAppointmentTemplateRecord</name>
        <label>$Label.ScheduleHomeVisitsFlow.DeleteServiceAppointmentTemplateLabel</label>
        <locationX>10030</locationX>
        <locationY>4652</locationY>
        <connector>
            <targetReference>DeleteWorkOrderTemplateRecord</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ScreenDisplayErrorDeleteServiceAppointmentTemplateRecord</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>ServiceAppointmentTemplateId</elementReference>
            </value>
        </filters>
        <object>ServiceAppointment</object>
    </recordDeletes>
    <recordDeletes>
        <description>$Label.ScheduleHomeVisitsFlow.DeleteServiceAppointmentTemplateDesc</description>
        <name>DeleteServiceAppointmentTemplateRecordRecurringVisit</name>
        <label>$Label.ScheduleHomeVisitsFlow.DeleteServiceAppointmentTemplateLabel</label>
        <locationX>2514</locationX>
        <locationY>5792</locationY>
        <connector>
            <targetReference>DeleteWorkOrderTemplateRecordRecurringVisit</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ScreenDisplayErrorDeleteServiceAppointmentTemplateRecordRecurringVisit</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>ServiceAppointmentTemplateId</elementReference>
            </value>
        </filters>
        <object>ServiceAppointment</object>
    </recordDeletes>
    <recordDeletes>
        <description>Deletes the service appointment records with an ID matching the ServiceAppointmentTemplateId.</description>
        <name>DeleteServiceAppointmentTemplatesRcrVisit</name>
        <label>Delete Service Appointment Templates</label>
        <locationX>4010</locationX>
        <locationY>5792</locationY>
        <connector>
            <targetReference>DeleteWorkOrderTemplatesRcrVisit</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ScreenDisplayErrorDeleteServiceAppointmentTemplatesRcrVisit</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>ServiceAppointmentTemplateId</elementReference>
            </value>
        </filters>
        <object>ServiceAppointment</object>
    </recordDeletes>
    <recordDeletes>
        <description>Deletes the service appointment records with an ID matching the ID of the current record in the IterateOverServiceAppointmentTemplatesRecurringVisit loop.</description>
        <name>DeleteServiceAppointmentTemplatesRecurringVisit</name>
        <label>Delete Service Appointment Templates</label>
        <locationX>2602</locationX>
        <locationY>4094</locationY>
        <connector>
            <targetReference>GetServiceAppointmentTemplatesWorkOrderRecurringVisit</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ScreenDisplayErrorDeleteServiceAppointmentTemplatesRecurringVisit</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>IterateOverServiceAppointmentTemplatesRecurringVisit.Id</elementReference>
            </value>
        </filters>
        <object>ServiceAppointment</object>
    </recordDeletes>
    <recordDeletes>
        <description>Deletes the service appointment records with an ID matching the ID of the current record in the IterateOverServiceAppointmentTemplates loop.</description>
        <name>DeleteServiceAppointmentTemplatesStartOfCare</name>
        <label>Delete Service Appointment Templates</label>
        <locationX>10118</locationX>
        <locationY>2954</locationY>
        <connector>
            <targetReference>GetServiceAppointmentsWorkOrderTemplate</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ScreenDisplayErrorDeleteServiceAppointmentTemplatesStartOfCare</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>IterateOverServiceAppointmentTemplates.Id</elementReference>
            </value>
        </filters>
        <object>ServiceAppointment</object>
    </recordDeletes>
    <recordDeletes>
        <description>Deletes the service appointment records with an ID matching the ServiceAppointmentTemplateId.</description>
        <name>DeleteServiceAppointmentTemplatesStartOfCareVisit</name>
        <label>Delete Service Appointment Templates</label>
        <locationX>11526</locationX>
        <locationY>4652</locationY>
        <connector>
            <targetReference>DeleteWorkOrderTemplatesStartOfCareVisit</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ScreenDisplayErrorDeleteServiceAppointmentTemplatesStartOfCareVisit</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>ServiceAppointmentTemplateId</elementReference>
            </value>
        </filters>
        <object>ServiceAppointment</object>
    </recordDeletes>
    <recordDeletes>
        <description>$Label.ScheduleHomeVisitsFlow.DeleteWorkOrderTemplateRecordDesc</description>
        <name>DeleteWorkOrderTemplateRecord</name>
        <label>$Label.ScheduleHomeVisitsFlow.DeleteWorkOrderTemplateLabel</label>
        <locationX>10030</locationX>
        <locationY>4760</locationY>
        <connector>
            <targetReference>ScreenCollectResourceDetailsStartOfCareVisit</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ScreenDisplayErrorDeleteWorkOrderTemplateRecord</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>WorkOrderTemplateId</elementReference>
            </value>
        </filters>
        <object>WorkOrder</object>
    </recordDeletes>
    <recordDeletes>
        <description>$Label.ScheduleHomeVisitsFlow.DeleteWorkOrderTemplateRecordDesc</description>
        <name>DeleteWorkOrderTemplateRecordRecurringVisit</name>
        <label>$Label.ScheduleHomeVisitsFlow.DeleteWorkOrderTemplateLabel</label>
        <locationX>2514</locationX>
        <locationY>5900</locationY>
        <connector>
            <targetReference>ScreenCollectResourceDetailsRecurringVisit</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ScreenDisplayErrorDeleteWorkOrderTemplateRecordRecurringVisit</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>WorkOrderTemplateId</elementReference>
            </value>
        </filters>
        <object>WorkOrder</object>
    </recordDeletes>
    <recordDeletes>
        <description>Deletes the work order records with an ID matching WorkOrderTemplateId.</description>
        <name>DeleteWorkOrderTemplatesRcrVisit</name>
        <label>Delete Work Order Templates</label>
        <locationX>4010</locationX>
        <locationY>5900</locationY>
        <connector>
            <targetReference>ScreenDisplayErrorRecurringVisitManualAssignment</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ScreenDisplayErrorDeleteWorkOrderTemplatesRcrVisit</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>WorkOrderTemplateId</elementReference>
            </value>
        </filters>
        <object>WorkOrder</object>
    </recordDeletes>
    <recordDeletes>
        <description>Deletes the work order records with an ID matching the Parent Record ID of the current record in the IterateOverServiceAppointmentTemplatesRecurringVisit loop.</description>
        <name>DeleteWorkOrderTemplatesRecurringVisit</name>
        <label>Delete Work Order Templates</label>
        <locationX>2338</locationX>
        <locationY>4526</locationY>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>CreateTemplateRecordsRecurringVisit</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ScreenDisplayErrorDeleteWorkOrderTemplatesRecurringVisit</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>IterateOverServiceAppointmentTemplatesRecurringVisit.ParentRecordId</elementReference>
            </value>
        </filters>
        <object>WorkOrder</object>
    </recordDeletes>
    <recordDeletes>
        <description>Deletes the work order records with an ID matching the Parent Record ID of the current record in the IterateOverServiceAppointmentTemplates loop.</description>
        <name>DeleteWorkOrderTemplatesStartOfCare</name>
        <label>Delete Work Order Templates</label>
        <locationX>9854</locationX>
        <locationY>3386</locationY>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>CreateTemplateRecords</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ScreenDisplayErrorDeleteWorkOrderTemplatesStartOfCare</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>IterateOverServiceAppointmentTemplates.ParentRecordId</elementReference>
            </value>
        </filters>
        <object>WorkOrder</object>
    </recordDeletes>
    <recordDeletes>
        <description>Deletes the work order records with an ID matching WorkOrderTemplateId.</description>
        <name>DeleteWorkOrderTemplatesStartOfCareVisit</name>
        <label>Delete Work Order Templates</label>
        <locationX>11526</locationX>
        <locationY>4760</locationY>
        <connector>
            <targetReference>ScreenDisplayErrorStartOfCareVisitManualAssignment</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ScreenDisplayErrorDeleteWorkOrderTemplatesStartOfCareVisit</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>WorkOrderTemplateId</elementReference>
            </value>
        </filters>
        <object>WorkOrder</object>
    </recordDeletes>
    <recordLookups>
        <description>$Label.ScheduleHomeVisitsFlow.GetLocationDesc</description>
        <name>GetAssociatedLocation</name>
        <label>$Label.ScheduleHomeVisitsFlow.GetLocation</label>
        <locationX>9257</locationX>
        <locationY>434</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetServiceTerritoryLocation</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ParentRecordId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId.Id</elementReference>
            </value>
        </filters>
        <object>AssociatedLocation</object>
        <outputAssignments>
            <assignToReference>LocationId</assignToReference>
            <field>LocationId</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <description>Gets the care request item with a ClinicalServiceRequestId that matches selectedClinicalServiceRequestId and stores the ApprovedQuantity field of the result in the ApprovedVisitCount variable.</description>
        <name>GetCareRequestItem</name>
        <label>Get Care Request Item</label>
        <locationX>2052</locationX>
        <locationY>2090</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetNewClinicalServiceRequest</targetReference>
        </connector>
        <faultConnector>
            <targetReference>DisplayErrorCareRequestItemScreen</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ClinicalServiceRequestId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>clinicalServiceRequest</elementReference>
            </value>
        </filters>
        <object>CareRequestItem</object>
        <outputAssignments>
            <assignToReference>ApprovedVisitCount</assignToReference>
            <field>ApprovedQuantity</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <description>$Label.ScheduleHomeVisitsFlow.GetClinicalServiceRequestDesc</description>
        <name>GetClinicalServiceRequest</name>
        <label>$Label.ScheduleHomeVisitsFlow.GetClinicalServiceRequest</label>
        <locationX>5141</locationX>
        <locationY>1874</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>IsVisitRecurring</targetReference>
        </connector>
        <faultConnector>
            <targetReference>DisplayErrorClinicalServiceRequestScreen</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>clinicalServiceRequest</elementReference>
            </value>
        </filters>
        <object>ClinicalServiceRequest</object>
        <outputAssignments>
            <assignToReference>clinicalServiceRequestName</assignToReference>
            <field>Name</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <description>$Label.ScheduleHomeVisitsFlow.GetCoverageBenefitsDesc</description>
        <name>GetCoverageBenefits</name>
        <label>$Label.ScheduleHomeVisitsFlow.GetCoverageBenefits</label>
        <locationX>9125</locationX>
        <locationY>866</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>IterateOverCoverageBenefits</targetReference>
        </connector>
        <filterLogic>1 AND 2 AND 3 AND (4 OR 6) AND (5 OR 7)</filterLogic>
        <filters>
            <field>MemberId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>CoverageType</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>HomeHealthCoverageType</elementReference>
            </value>
        </filters>
        <filters>
            <field>BenefitPeriodStartDate</field>
            <operator>LessThanOrEqualTo</operator>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </filters>
        <filters>
            <field>BenefitPeriodEndDate</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </filters>
        <filters>
            <field>BenefitPeriodStartDate</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>BenefitPeriodEndDate</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>CoverageBenefit</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets the care service visit plan with a ServiceRequestId that matches the ID in clinicalServiceRequest and stores the ID and CreatedVisitCount fields of the result in the Care Service Visit Plan from GetCreatedVisitCount record variable.</description>
        <name>GetNewClinicalServiceRequest</name>
        <label>Get New Clinical Service Request</label>
        <locationX>2052</locationX>
        <locationY>2198</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>UpdateApprovedVisitCount</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ServiceRequestId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>clinicalServiceRequest</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CareServiceVisitPlan</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>CreatedVisitCount</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>$Label.ScheduleHomeVisitsFlow.GetSchedulingPolicyDesc</description>
        <name>GetSchedulingPolicy</name>
        <label>$Label.ScheduleHomeVisitsFlow.GetSchedulingPolicy</label>
        <locationX>9257</locationX>
        <locationY>650</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>ShouldCheckAuthorization</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>DefaultSchedulingPolicyName</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>FSL__Scheduling_Policy__c</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>Name</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets the service appointment records with a Parent Record ID matching the Parent Record ID of the current record in the IterateOverServiceAppointmentTemplates loop. Stores the ID of results in the ServiceAppointmentsForWorkOrderTemplates record collection.</description>
        <name>GetServiceAppointmentsWorkOrderTemplate</name>
        <label>Get Service Appointments</label>
        <locationX>10118</locationX>
        <locationY>3062</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SetServiceAppointmentWorkOrderTemplateCount</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ScreenDisplayErrorGetServiceAppointmentsWorkOrderTemplate</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ParentRecordId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>IterateOverServiceAppointmentTemplates.ParentRecordId</elementReference>
            </value>
        </filters>
        <object>ServiceAppointment</object>
        <outputReference>ServiceAppointmentsForWorkOrderTemplates</outputReference>
        <queriedFields>Id</queriedFields>
    </recordLookups>
    <recordLookups>
        <description>$Label.ScheduleHomeVisitsFlow.GetServiceAppointmentTemplateDesc</description>
        <name>GetServiceAppointmentTemplate</name>
        <label>$Label.ScheduleHomeVisitsFlow.GetServiceAppointmentTemplateLabel</label>
        <locationX>10030</locationX>
        <locationY>2414</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>DoesServiceAppointmentTemplateExist</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ScreenDisplayErrorGetServiceAppointmentTemplate</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Canceled</stringValue>
            </value>
        </filters>
        <filters>
            <field>Comments</field>
            <operator>Contains</operator>
            <value>
                <elementReference>ServiceAppointmentTemplateComment</elementReference>
            </value>
        </filters>
        <object>ServiceAppointment</object>
        <outputAssignments>
            <assignToReference>ServiceAppointmentTemplateId</assignToReference>
            <field>Id</field>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>WorkOrderTemplateId</assignToReference>
            <field>ParentRecordId</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <description>$Label.ScheduleHomeVisitsFlow.GetServiceAppointmentTemplateDesc</description>
        <name>GetServiceAppointmentTemplateRecurringVisit</name>
        <label>$Label.ScheduleHomeVisitsFlow.GetServiceAppointmentTemplateLabel</label>
        <locationX>2514</locationX>
        <locationY>3554</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>DoesServiceAppointmentTemplateRecurringVisitExist</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ScreenDisplayErrorGetServiceAppointmentTemplateRecurringVisit</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Canceled</stringValue>
            </value>
        </filters>
        <filters>
            <field>Comments</field>
            <operator>Contains</operator>
            <value>
                <elementReference>ServiceAppointmentTemplateComment</elementReference>
            </value>
        </filters>
        <object>ServiceAppointment</object>
        <outputAssignments>
            <assignToReference>ServiceAppointmentTemplateId</assignToReference>
            <field>Id</field>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>WorkOrderTemplateId</assignToReference>
            <field>ParentRecordId</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <description>Gets the service appointment records with an Account ID matching the Account ID of the record passed into the flow, Status equal to Canceled, and Comments contains ServiceAppointmentTemplateComment. Stores the results in the ServiceAppointmentTemplates record collection.</description>
        <name>GetServiceAppointmentTemplatesRecurringVisit</name>
        <label>Get Service Appointment Templates</label>
        <locationX>2250</locationX>
        <locationY>3770</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>IterateOverServiceAppointmentTemplatesRecurringVisit</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ScreenDisplayErrorGetServiceAppointmentTemplatesRecurringVisit</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Canceled</stringValue>
            </value>
        </filters>
        <filters>
            <field>Comments</field>
            <operator>Contains</operator>
            <value>
                <elementReference>ServiceAppointmentTemplateComment</elementReference>
            </value>
        </filters>
        <object>ServiceAppointment</object>
        <outputReference>ServiceAppointmentTemplates</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>CreatedDate</queriedFields>
        <queriedFields>ParentRecordId</queriedFields>
        <queriedFields>Comments</queriedFields>
    </recordLookups>
    <recordLookups>
        <description>Gets the service appointment records with an Account ID matching Account ID of the record passed into the flow, Status equal to Canceled, and Comments contains ServiceAppointmentTemplateComment. Stores the ID, CreatedDate, ParentRecordId, and Comments of the results in the ServiceAppointmentTemplates record collection.</description>
        <name>GetServiceAppointmentTemplatesStartOfCare</name>
        <label>Get Service Appointment Templates</label>
        <locationX>9766</locationX>
        <locationY>2630</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>IterateOverServiceAppointmentTemplates</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ScreenDisplayErrorGetServiceAppointmentTemplatesStartOfCare</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Canceled</stringValue>
            </value>
        </filters>
        <filters>
            <field>Comments</field>
            <operator>Contains</operator>
            <value>
                <elementReference>ServiceAppointmentTemplateComment</elementReference>
            </value>
        </filters>
        <object>ServiceAppointment</object>
        <outputReference>ServiceAppointmentTemplates</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>CreatedDate</queriedFields>
        <queriedFields>ParentRecordId</queriedFields>
        <queriedFields>Comments</queriedFields>
    </recordLookups>
    <recordLookups>
        <description>Gets the service appointment records with a Parent Record ID matching the Parent Record ID of the current record in the IterateOverServiceAppointmentTemplatesRecurringVisit loop. Stores the ID of the results in the ServiceAppointmentsForWorkOrderTemplates record collection.</description>
        <name>GetServiceAppointmentTemplatesWorkOrderRecurringVisit</name>
        <label>Get Service Appointment Templates</label>
        <locationX>2602</locationX>
        <locationY>4202</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SetServiceAppointmentWorkOrderRecurringVisitCount</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ScreenDisplayErrorGetServiceAppointmentTemplatesWorkOrderRecurringVisit</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ParentRecordId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>IterateOverServiceAppointmentTemplatesRecurringVisit.ParentRecordId</elementReference>
            </value>
        </filters>
        <object>ServiceAppointment</object>
        <outputReference>ServiceAppointmentsForWorkOrderTemplates</outputReference>
        <queriedFields>Id</queriedFields>
    </recordLookups>
    <recordLookups>
        <description>Gets the service appointment record with an ID matching ServiceAppointmentTemplateId. Stores the parent record ID of the result in WorkOrderTemplateId.</description>
        <name>GetServiceAppointmentTemplateWorkOrderRecurringVisit</name>
        <label>Get Service Appointment Template</label>
        <locationX>4010</locationX>
        <locationY>5684</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>DeleteServiceAppointmentTemplatesRcrVisit</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ScreenDisplayErrorGetServiceAppointmentTemplateWorkOrderRecurringVisit</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>ServiceAppointmentTemplateId</elementReference>
            </value>
        </filters>
        <object>ServiceAppointment</object>
        <outputAssignments>
            <assignToReference>WorkOrderTemplateId</assignToReference>
            <field>ParentRecordId</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <description>Gets the service appointment record with an ID matching ServiceAppointmentTemplateId. Stores the parent record ID of the result in WorkOrderTemplateId.</description>
        <name>GetServiceAppointmentTemplateWorkOrderStartOfCare</name>
        <label>Get Service Appointment Template</label>
        <locationX>11526</locationX>
        <locationY>4544</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>DeleteServiceAppointmentTemplatesStartOfCareVisit</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ScreenDisplayErrorGetServiceAppointmentTemplateWorkOrderStartOfCare</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>ServiceAppointmentTemplateId</elementReference>
            </value>
        </filters>
        <object>ServiceAppointment</object>
        <outputAssignments>
            <assignToReference>WorkOrderTemplateId</assignToReference>
            <field>ParentRecordId</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <description>$Label.ScheduleHomeVisitsFlow.GetServiceTerritoryLocationDesc</description>
        <name>GetServiceTerritoryLocation</name>
        <label>$Label.ScheduleHomeVisitsFlow.GetServiceTerritoryLocation</label>
        <locationX>9257</locationX>
        <locationY>542</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetSchedulingPolicy</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>LocationId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>LocationId</elementReference>
            </value>
        </filters>
        <object>ServiceTerritoryLocation</object>
        <outputAssignments>
            <assignToReference>ServiceTerritoryId</assignToReference>
            <field>ServiceTerritoryId</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <description>$Label.ScheduleHomeVisitsFlow.GetWorkOrderTemplateDesc</description>
        <name>GetWorkOrderTemplate</name>
        <label>$Label.ScheduleHomeVisitsFlow.GetWorkOrderTemplateLabel</label>
        <locationX>10030</locationX>
        <locationY>4544</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>DeleteServiceAppointmentTemplateRecord</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ScreenDisplayErrorGetWorkOrderTemplate</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>ServiceAppointmentTemplateId</elementReference>
            </value>
        </filters>
        <object>ServiceAppointment</object>
        <outputAssignments>
            <assignToReference>WorkOrderTemplateId</assignToReference>
            <field>ParentRecordId</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <description>$Label.ScheduleHomeVisitsFlow.GetWorkOrderTemplateDesc</description>
        <name>GetWorkOrderTemplateRecurringVisit</name>
        <label>$Label.ScheduleHomeVisitsFlow.GetWorkOrderTemplateLabel</label>
        <locationX>2514</locationX>
        <locationY>5684</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>DeleteServiceAppointmentTemplateRecordRecurringVisit</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ScreenDisplayErrorGetWorkOrderTemplateRecurringVisit</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>ServiceAppointmentTemplateId</elementReference>
            </value>
        </filters>
        <object>ServiceAppointment</object>
        <outputAssignments>
            <assignToReference>WorkOrderTemplateId</assignToReference>
            <field>ParentRecordId</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <description>$Label.ScheduleHomeVisitsFlow.GetWorkTypeLabelDesc</description>
        <name>GetWorkType</name>
        <label>$Label.ScheduleHomeVisitsFlow.GetWorkTypeLabel</label>
        <locationX>10030</locationX>
        <locationY>4220</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>ScreenDisplayStartOfCareVisitDetails</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>workTypeId</elementReference>
            </value>
        </filters>
        <object>WorkType</object>
        <outputAssignments>
            <assignToReference>WorkTypeName</assignToReference>
            <field>Name</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <description>$Label.ScheduleHomeVisitsFlow.GetWorkTypeLabelDesc</description>
        <name>GetWorkTypeRecurringVisit</name>
        <label>$Label.ScheduleHomeVisitsFlow.GetWorkTypeLabel</label>
        <locationX>2514</locationX>
        <locationY>5360</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>ScreenDisplayRecurringVisitDetails</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>workTypeId</elementReference>
            </value>
        </filters>
        <object>WorkType</object>
        <outputAssignments>
            <assignToReference>WorkTypeName</assignToReference>
            <field>Name</field>
        </outputAssignments>
    </recordLookups>
    <recordRollbacks>
        <name>Copy_3_of_Rollback_records_created</name>
        <label>$Label.ScheduleHomeVisitsFlow.RollBackRecordChanges</label>
        <locationX>12582</locationX>
        <locationY>4220</locationY>
        <connector>
            <targetReference>ScreenDisplayErrorCreateTemplateRecords</targetReference>
        </connector>
    </recordRollbacks>
    <recordRollbacks>
        <description>Undoes all record changes made after SelectVisitTimeStartCareScreen.</description>
        <name>RollBackRecordsCareServiceVisit</name>
        <label>$Label.ScheduleHomeVisitsFlow.RollBackRecordChanges</label>
        <locationX>7438</locationX>
        <locationY>3602</locationY>
        <connector>
            <targetReference>DisplayErrorCareServiceVisitScreen</targetReference>
        </connector>
    </recordRollbacks>
    <recordRollbacks>
        <description>Undoes all record changes made after SelectVisitTimeStartCareScreen.</description>
        <name>RollBackRecordsCreateSkillRequirement</name>
        <label>$Label.ScheduleHomeVisitsFlow.RollBackRecordChanges</label>
        <locationX>7310</locationX>
        <locationY>2954</locationY>
        <connector>
            <targetReference>DisplayErrorCreateSkillRequirementScreen</targetReference>
        </connector>
    </recordRollbacks>
    <recordRollbacks>
        <description>$Label.ScheduleHomeVisitsFlow.RollBackRecordsCreateTemplateRecordsErrorDesc</description>
        <name>RollBackRecordsCreateTemplateRecordsError</name>
        <label>$Label.ScheduleHomeVisitsFlow.RollBackRecordChanges</label>
        <locationX>5066</locationX>
        <locationY>5360</locationY>
        <connector>
            <targetReference>ScreenDisplayErrorCreateTemplateRecordsRecurringVisit</targetReference>
        </connector>
    </recordRollbacks>
    <recordRollbacks>
        <description>Undoes all record changes made after SelectVisitTimeStartCareScreen.</description>
        <name>RollBackRecordsHomeVisit</name>
        <label>$Label.ScheduleHomeVisitsFlow.RollBackRecordChanges</label>
        <locationX>7702</locationX>
        <locationY>3494</locationY>
        <connector>
            <targetReference>DisplayErrorHomeVisitScreen</targetReference>
        </connector>
    </recordRollbacks>
    <screens>
        <description>$Label.ScheduleHomeVisitsFlow.DisplayErrorCareRequestItemScreenDesc</description>
        <name>DisplayErrorCareRequestItemScreen</name>
        <label>Display Error</label>
        <locationX>5858</locationX>
        <locationY>2198</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>getCarerequestItemErrMessage</name>
            <fieldText>&lt;p&gt;Something went wrong and we couldn’t get the number of approved visits for this service request. Ask your Salesforce admin for help.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;{!$Flow.FaultMessage}&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>$Label.ScheduleHomeVisitsFlow.DisplayErrorCareServiceVisitScreenDesc</description>
        <name>DisplayErrorCareServiceVisitScreen</name>
        <label>Display Error</label>
        <locationX>7438</locationX>
        <locationY>3710</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>CareServiceVisitErrorDisplayText</name>
            <fieldText>&lt;p&gt;Something went wrong and we couldn’t create the care service visit junction record. Ask your Salesforce admin for help.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Roboto, sans-serif; font-size: 10pt;&quot;&gt;{!$Flow.FaultMessage}&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>$Label.ScheduleHomeVisitsFlow.DisplayErrorClinicalServiceRequestScreenDesc</description>
        <name>DisplayErrorClinicalServiceRequestScreen</name>
        <label>Display Error</label>
        <locationX>13110</locationX>
        <locationY>1982</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>ClinicalServiceRequestErrorDisplayText</name>
            <fieldText>&lt;p&gt;&amp;nbsp;Something went wrong and we couldn’t get the selected clinical service record. Ask your Salesforce admin for help.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;{!$Flow.FaultMessage}&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>DisplayErrorCreateSkillRequirementScreen</name>
        <label>Display Error</label>
        <locationX>7310</locationX>
        <locationY>3062</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>CreateSkillRequirementErrorDisplayText</name>
            <fieldText>&lt;p&gt;Something went wrong and we couldn’t get the skills required for the new home care service request. Ask your Salesforce admin for help.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;{!$Flow.FaultMessage}&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>$Label.ScheduleHomeVisitsFlow.DisplayErrorHomeVisitScreenDesc</description>
        <name>DisplayErrorHomeVisitScreen</name>
        <label>Display Error</label>
        <locationX>7702</locationX>
        <locationY>3602</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>HomeVisitErrorDisplayText</name>
            <fieldText>&lt;p&gt;Something went wrong and we couldn&apos;t create the home visit record.  Ask your Salesforce admin for help.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent; color: rgb(0, 0, 0); font-family: &amp;quot;Arial Narrow&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;{!$Flow.FaultMessage}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>$Label.ScheduleHomeVisitsFlow.DisplayErrorScheduleRecurringVisitScreenDesc</description>
        <name>DisplayErrorScheduleRecurringVisitScreen</name>
        <label>Display Error</label>
        <locationX>314</locationX>
        <locationY>3446</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ScheduleRecurringVisitScreenDisplayText</name>
            <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;{!$Flow.FaultMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>$Label.ScheduleHomeVisitsFlow.TimeSlotDisplayError</description>
        <name>DisplayErrorTimeslotScreen</name>
        <label>Display Error</label>
        <locationX>6122</locationX>
        <locationY>2414</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>TimeslotErrorDisplayText</name>
            <fieldText>&lt;p&gt;We can’t schedule a visit time because the patient’s operating hours aren’t fully configured. Your Salesforce admin can help with that.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <nextOrFinishButtonLabel>Close</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>$Label.ScheduleHomeVisitsFlow.CreateWorkOrderDesc</description>
        <name>DisplayErrorWorkOrderScreen</name>
        <label>Display Error</label>
        <locationX>7966</locationX>
        <locationY>2738</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>WorkOrderErrorDisplayText</name>
            <fieldText>&lt;p&gt;Something went wrong, and we couldn’t create a home care service record.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;{!$Flow.FaultMessage}&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>$Label.ScheduleHomeVisitsFlow.DisplayScheduleStartOfCareVisitErrorScreen</description>
        <name>DisplayScheduleStartOfCareVisitErrorScreen</name>
        <label>Display Error</label>
        <locationX>7830</locationX>
        <locationY>4142</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ScheduleStartOfCareVisitErrorDisplayText</name>
            <fieldText>&lt;p&gt;Something went wrong when we tried to schedule the start of care visit.&lt;/p&gt;&lt;p&gt;{!$Flow.FaultMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>$Label.ScheduleHomeVisitsFlow.ScreenCollectResourceDetailsRecurringVisitDesc</description>
        <name>ScreenCollectResourceDetailsRecurringVisit</name>
        <label>Collect Resource Details for Recurring Visits</label>
        <locationX>2514</locationX>
        <locationY>6008</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>ScheduleRecurringVisitManually</targetReference>
        </connector>
        <fields>
            <name>ScreenCollectResourceDetailsRecurringVisit_Section1</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>ScreenCollectResourceDetailsRecurringVisit_Section1_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>ClinicalServiceRequestNameDisplayText</name>
                    <fieldText>&lt;p&gt;Service:&lt;/p&gt;&lt;p&gt;{!clinicalServiceRequestName}&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>ScreenCollectResourceDetailsRecurringVisit_Section1_Column2</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>VisitCountDisplayText</name>
                    <fieldText>&lt;p&gt;Total Visits:&lt;/p&gt;&lt;p&gt;{!VisitRequired} &lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;{!VisitsRequiredNumber}&lt;/span&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithoutHeader</regionContainerType>
        </fields>
        <fields>
            <name>SelectResourcesforRecurringHomeVisitsComponent</name>
            <extensionName>healthcloud:hhResourceRecommendation</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>resourceRecommendationLists</name>
                <value>
                    <elementReference>resourceRecommendation</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <outputParameters>
                <assignToReference>SelectedResourceRecommendation</assignToReference>
                <name>selectedRecommendedResources</name>
            </outputParameters>
        </fields>
        <nextOrFinishButtonLabel>Assign</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>$Label.ScheduleHomeVisitsFlow.ManualSchedulingAssignSocResourceDesc</description>
        <name>ScreenCollectResourceDetailsStartOfCareVisit</name>
        <label>Collect Resource Details for Start of Care Visit</label>
        <locationX>10030</locationX>
        <locationY>4868</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>ScheduleStartOfCareVisitManually</targetReference>
        </connector>
        <fields>
            <name>ScreenCollectResourceDetailsStartOfCareVisit_Section1</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>ScreenCollectResourceDetailsStartOfCareVisit_Section1_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>ClinicalServiceRequestDisplayText</name>
                    <fieldText>&lt;p&gt;Service:&lt;/p&gt;&lt;p&gt;{!clinicalServiceRequestName}&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>ScreenCollectResourceDetailsStartOfCareVisit_Section1_Column2</name>
                <fieldType>Region</fieldType>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithoutHeader</regionContainerType>
        </fields>
        <fields>
            <name>SelectResourcesforStartOfCareHomeVisitsComponent</name>
            <extensionName>healthcloud:hhResourceRecommendation</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>resourceRecommendationLists</name>
                <value>
                    <elementReference>resourceRecommendation</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <outputParameters>
                <assignToReference>SelectedResourceRecommendation</assignToReference>
                <name>selectedRecommendedResources</name>
            </outputParameters>
        </fields>
        <nextOrFinishButtonLabel>Assign</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>$Label.ScheduleHomeVisitsFlow.ScreenDisplayErrorCreateTemplateRecordsDesc</description>
        <name>ScreenDisplayErrorCreateTemplateRecords</name>
        <label>Display Error</label>
        <locationX>12582</locationX>
        <locationY>4328</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ErrorCreateTemplateRecordsDisplayText</name>
            <fieldText>&lt;p&gt;Something went wrong and we couldn&apos;t create the service appointment template and work order template records.&lt;/p&gt;&lt;p&gt;{!$Flow.FaultMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>$Label.ScheduleHomeVisitsFlow.ScreenDisplayErrorCreateTemplateRecordsRecurringVisitDesc</description>
        <name>ScreenDisplayErrorCreateTemplateRecordsRecurringVisit</name>
        <label>Display Error</label>
        <locationX>5066</locationX>
        <locationY>5468</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ErrorCreateTemplateRecordsRecurringVisitDisplayText</name>
            <fieldText>&lt;p&gt;Something went wrong and we couldn&apos;t create the service appointment template and work order template records.&lt;/p&gt;&lt;p&gt;{!$Flow.FaultMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>$Label.ScheduleHomeVisitsFlow.ScreenDisplayErrorDeleteServiceAppointmentTemplateRecordDesc</description>
        <name>ScreenDisplayErrorDeleteServiceAppointmentTemplateRecord</name>
        <label>Display Error</label>
        <locationX>10998</locationX>
        <locationY>4760</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ErrorDeleteServiceAppointmentTemplateRecordDisplayText</name>
            <fieldText>&lt;p&gt;Something went wrong and we couldn&apos;t delete the service appointment template.&lt;/p&gt;&lt;p&gt;{!$Flow.FaultMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>$Label.ScheduleHomeVisitsFlow.ScreenDisplayErrorDeleteServiceAppointmentTemplateRecordDesc</description>
        <name>ScreenDisplayErrorDeleteServiceAppointmentTemplateRecordRecurringVisit</name>
        <label>Display Error</label>
        <locationX>3482</locationX>
        <locationY>5900</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ErrorDeleteServiceAppointmentTemplateRecordRecurringVisitDisplayText</name>
            <fieldText>&lt;p&gt;Something went wrong and we couldn&apos;t delete the service appointment template.&lt;/p&gt;&lt;p&gt;{!$Flow.FaultMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Displays an error to the flow user when there&apos;s an error deleting the service appointment records.</description>
        <name>ScreenDisplayErrorDeleteServiceAppointmentTemplatesRcrVisit</name>
        <label>Display Error</label>
        <locationX>4538</locationX>
        <locationY>5900</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ErrorDeleteServiceAppointmentTemplatesRcrVisitDisplayText</name>
            <fieldText>&lt;p&gt;Something went wrong and we couldn&apos;t delete the service appointment records.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;{!$Flow.FaultMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Displays an error to the flow user when there&apos;s an error deleting the service appointment records.</description>
        <name>ScreenDisplayErrorDeleteServiceAppointmentTemplatesRecurringVisit</name>
        <label>Display Error</label>
        <locationX>3394</locationX>
        <locationY>4202</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ErrorDeleteServiceAppointmentTemplatesRecurringVisitDisplayText</name>
            <fieldText>&lt;p&gt;Something went wrong and we couldn&apos;t delete the service appointment records.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;{!$Flow.FaultMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Displays an error to the flow user when there&apos;s an error deleting the service appointment records.</description>
        <name>ScreenDisplayErrorDeleteServiceAppointmentTemplatesStartOfCare</name>
        <label>Display Error</label>
        <locationX>10910</locationX>
        <locationY>3062</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ErrorDeleteServiceAppointmentTemplatesStartOfCareDisplayText</name>
            <fieldText>&lt;p&gt;Something went wrong and we couldn&apos;t delete the service appointment records.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;{!$Flow.FaultMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Displays an error to the flow user when there&apos;s an error deleting the service appointment records.</description>
        <name>ScreenDisplayErrorDeleteServiceAppointmentTemplatesStartOfCareVisit</name>
        <label>Display Error</label>
        <locationX>12054</locationX>
        <locationY>4760</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ErrorDeleteServiceAppointmentTemplatesStartOfCareVisitDisplayText</name>
            <fieldText>&lt;p&gt;Something went wrong and we couldn&apos;t delete the service appointment records.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;{!$Flow.FaultMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>$Label.ScheduleHomeVisitsFlow.ScreenDisplayErrorDeleteWorkOrderTemplateDesc</description>
        <name>ScreenDisplayErrorDeleteWorkOrderTemplateRecord</name>
        <label>Display Error</label>
        <locationX>10734</locationX>
        <locationY>4868</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ErrorDeleteWorkOrderTemplateRecordDisplayText</name>
            <fieldText>&lt;p&gt;Something went wrong and we couldn&apos;t delete the work order template.&lt;/p&gt;&lt;p&gt;{!$Flow.FaultMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>$Label.ScheduleHomeVisitsFlow.ScreenDisplayErrorDeleteWorkOrderTemplateRecordRecurringVisitDesc</description>
        <name>ScreenDisplayErrorDeleteWorkOrderTemplateRecordRecurringVisit</name>
        <label>Display Error</label>
        <locationX>3218</locationX>
        <locationY>6008</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ErrorDeleteWorkOrderTemplateRecordRecurringVisitDisplayText</name>
            <fieldText>&lt;p&gt;Something went wrong and we couldn&apos;t delete the work order template.&lt;/p&gt;&lt;p&gt;{!$Flow.FaultMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Displays an error to the flow user when there&apos;s an error in deleting the work order records.</description>
        <name>ScreenDisplayErrorDeleteWorkOrderTemplatesRcrVisit</name>
        <label>Display Error</label>
        <locationX>4274</locationX>
        <locationY>6008</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ErrorDeleteWorkOrderTemplatesRcrVisitDisplayText</name>
            <fieldText>&lt;p&gt;Something went wrong and we couldn&apos;t delete the work order records.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;{!$Flow.FaultMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Displays an error to the flow user when there&apos;s an error deleting the work order records.</description>
        <name>ScreenDisplayErrorDeleteWorkOrderTemplatesRecurringVisit</name>
        <label>Display Error</label>
        <locationX>2602</locationX>
        <locationY>4634</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ErrorDeleteWorkOrderTemplatesRecurringVisitDisplayText</name>
            <fieldText>&lt;p&gt;Something went wrong and we couldn&apos;t delete the work order records.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;{!$Flow.FaultMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Displays an error to the flow user when there&apos;s an error deleting the work order records.</description>
        <name>ScreenDisplayErrorDeleteWorkOrderTemplatesStartOfCare</name>
        <label>Display Error</label>
        <locationX>10118</locationX>
        <locationY>3494</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ErrorDeleteWorkOrderTemplatesStartOfCareDisplayText</name>
            <fieldText>&lt;p&gt;Something went wrong and we couldn&apos;t delete the work order records.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;{!$Flow.FaultMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Displays an error to the flow user when there&apos;s an error in deleting the work order records.</description>
        <name>ScreenDisplayErrorDeleteWorkOrderTemplatesStartOfCareVisit</name>
        <label>Display Error</label>
        <locationX>11790</locationX>
        <locationY>4868</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ErrorDeleteWorkOrderTemplatesStartOfCareVisitDisplayText</name>
            <fieldText>&lt;p&gt;Something went wrong and we couldn&apos;t delete the work order records.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;{!$Flow.FaultMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Displays an error to the flow user when there&apos;s an error getting the service appointment records associated with a work order template.</description>
        <name>ScreenDisplayErrorGetServiceAppointmentsWorkOrderTemplate</name>
        <label>Display Error</label>
        <locationX>10646</locationX>
        <locationY>3170</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ErrorGetServiceAppointmentsWorkOrderTemplateDisplayText</name>
            <fieldText>&lt;p&gt;Something went wrong and we couldn&apos;t get the service appointment template records associated with the work order template.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;{!$Flow.FaultMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>$Label.ScheduleHomeVisitsFlow.ScreenDisplayErrorGetServiceAppointmentTemplateDesc</description>
        <name>ScreenDisplayErrorGetServiceAppointmentTemplate</name>
        <label>Display Error</label>
        <locationX>12846</locationX>
        <locationY>2522</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ErrorGetServiceAppointmentTemplateDisplayText</name>
            <fieldText>&lt;p&gt;Something went wrong and we couldn&apos;t get the service appointment template record.&lt;/p&gt;&lt;p&gt;{!$Flow.FaultMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>$Label.ScheduleHomeVisitsFlow.ScreenDisplayErrorGetServiceAppointmentTemplateDesc</description>
        <name>ScreenDisplayErrorGetServiceAppointmentTemplateRecurringVisit</name>
        <label>Display Error</label>
        <locationX>5330</locationX>
        <locationY>3662</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ErrorGetServiceAppointmentTemplateRecurringVisitDisplayText</name>
            <fieldText>&lt;p&gt;Something went wrong and we couldn&apos;t get the service appointment template record.&lt;/p&gt;&lt;p&gt;{!$Flow.FaultMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Displays an error to the flow user when there&apos;s an error getting the service appointment records.</description>
        <name>ScreenDisplayErrorGetServiceAppointmentTemplatesRecurringVisit</name>
        <label>Display Error</label>
        <locationX>2514</locationX>
        <locationY>3878</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ErrorGetServiceAppointmentTemplatesRecurringVisitDisplayText</name>
            <fieldText>&lt;p&gt;Something went wrong and we couldn&apos;t get the service appointment records.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;{!$Flow.FaultMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Displays an error to the flow user when there&apos;s an error getting the service appointment records.</description>
        <name>ScreenDisplayErrorGetServiceAppointmentTemplatesStartOfCare</name>
        <label>Display Error</label>
        <locationX>10030</locationX>
        <locationY>2738</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ErrorGetServiceAppointmentTemplatesStartOfCareDisplayText</name>
            <fieldText>&lt;p&gt;Something went wrong and we couldn&apos;t get the service appointment records.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;{!$Flow.FaultMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Displays an error to the flow user when there&apos;s an error getting the service appointment records associated with a work order template.</description>
        <name>ScreenDisplayErrorGetServiceAppointmentTemplatesWorkOrderRecurringVisit</name>
        <label>Display Error</label>
        <locationX>3130</locationX>
        <locationY>4310</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ErrorGetServiceAppointmentTemplatesWorkOrderRecurringVisitDisplayText</name>
            <fieldText>&lt;p&gt;Something went wrong and we couldn&apos;t get the service appointment template records associated with the work order template.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;{!$Flow.FaultMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Displays an error to the flow user when there&apos;s an error in getting the service appointment record.</description>
        <name>ScreenDisplayErrorGetServiceAppointmentTemplateWorkOrderRecurringVisit</name>
        <label>Display Error</label>
        <locationX>4802</locationX>
        <locationY>5792</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ErrorGetServiceAppointmentTemplateWorkOrderRecurringVisitDisplayText</name>
            <fieldText>&lt;p&gt;Something went wrong and we couldn&apos;t get the service appointment record.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;{!$Flow.FaultMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Displays an error to the flow user when there&apos;s an error in getting the service appointment record.</description>
        <name>ScreenDisplayErrorGetServiceAppointmentTemplateWorkOrderStartOfCare</name>
        <label>Display Error</label>
        <locationX>12318</locationX>
        <locationY>4652</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ErrorGetServiceAppointmentTemplateWorkOrderStartOfCareDisplayText</name>
            <fieldText>&lt;p&gt;Something went wrong and we couldn&apos;t get the service appointment record.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;{!$Flow.FaultMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>$Label.ScheduleHomeVisitsFlow.ScreenDisplayErrorGetWorkOrderTemplateDesc</description>
        <name>ScreenDisplayErrorGetWorkOrderTemplate</name>
        <label>Display Error</label>
        <locationX>11262</locationX>
        <locationY>4652</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ErrorGetWorkOrderTemplateDisplayText</name>
            <fieldText>&lt;p&gt;Something went wrong and we couldn&apos;t get the work order template that’s associated with the service appointment template.&lt;/p&gt;&lt;p&gt;{!$Flow.FaultMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>$Label.ScheduleHomeVisitsFlow.ScreenDisplayErrorGetWorkOrderTemplateDesc</description>
        <name>ScreenDisplayErrorGetWorkOrderTemplateRecurringVisit</name>
        <label>Display Error</label>
        <locationX>3746</locationX>
        <locationY>5792</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ErrorGetWorkOrderTemplateRecurringVisitDisplayText</name>
            <fieldText>&lt;p&gt;Something went wrong and we couldn&apos;t get the work order template that’s associated with the service appointment template.&lt;/p&gt;&lt;p&gt;{!$Flow.FaultMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>$Label.ScheduleHomeVisitsFlow.ScreenDisplayErrorRecurringVisitManualAssignmentDesc</description>
        <name>ScreenDisplayErrorRecurringVisitManualAssignment</name>
        <label>Display Error</label>
        <locationX>4010</locationX>
        <locationY>6008</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ErrorRecurringVisitManualAssignmentDisplayText</name>
            <fieldText>&lt;p&gt;Something went wrong and we couldn&apos;t get resources to manually assign to the recurring home visits.&lt;/p&gt;&lt;p&gt;{!$Flow.FaultMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>$Label.ScheduleHomeVisitsFlow.ScreenDisplayErrorScheduleRecurringVisitManuallyDesc</description>
        <name>ScreenDisplayErrorScheduleRecurringVisitManually</name>
        <label>Display Error</label>
        <locationX>2954</locationX>
        <locationY>6224</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ErrorScheduleRecurringVisitManuallyDisplayText</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;Something went wrong and we couldn&apos;t create recurring home visits and assign the manually selected care resources to the visits.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;{!$Flow.FaultMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>$Label.ScheduleHomeVisitsFlow.ScreenDisplayErrorScheduleStartOfCareVisitManuallyDesc</description>
        <name>ScreenDisplayErrorScheduleStartOfCareVisitManually</name>
        <label>Display Error</label>
        <locationX>10470</locationX>
        <locationY>5084</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ErrorScheduleStartOfCareVisitManuallyDisplayText</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(68, 68, 68); background-color: rgb(255, 255, 255);&quot;&gt;Something went wrong and we couldn&apos;t create a Start of Care home visit and assign  the manually selected care resource to the visit.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;{!$Flow.FaultMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>$Label.ScheduleHomeVisitsFlow.ManualSchedulingSocGetResourceErrorScreenDesc</description>
        <name>ScreenDisplayErrorStartOfCareVisitManualAssignment</name>
        <label>Display Error</label>
        <locationX>11526</locationX>
        <locationY>4868</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ErrorStartOfCareVisitManualAssignmentDisplayText</name>
            <fieldText>&lt;p&gt;Something went wrong and we couldn&apos;t get resources to manually assign to the Start of Care home visit.&lt;/p&gt;&lt;p&gt;{!$Flow.FaultMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>$Label.ScheduleHomeVisitsFlow.ScreenDisplayRecurringVisitDetailsDesc</description>
        <name>ScreenDisplayRecurringVisitDetails</name>
        <label>Display Recurring Visit Details</label>
        <locationX>2514</locationX>
        <locationY>5468</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>GetResourcesforRecurringVisitManualScheduling</targetReference>
        </connector>
        <fields>
            <name>ScreenDisplayRecurringVisitDetails_Section1</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>ScreenDisplayRecurringVisitDetails_Section1_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>RecurringVisitManualAssignmentDisplayText</name>
                    <fieldText>&lt;p&gt;Recurring Visit Details&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>12</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithoutHeader</regionContainerType>
        </fields>
        <fields>
            <name>ScreenDisplayRecurringVisitDetails_Section2</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>ScreenDisplayRecurringVisitDetails_Section2_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>RecurringVisitManualAssignmentVisitTypeDisplayText</name>
                    <fieldText>&lt;p&gt;Visit Type :&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(68, 68, 68); background-color: rgb(255, 255, 255);&quot;&gt;{!VisitTypePicklist}&lt;/span&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>3</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>ScreenDisplayRecurringVisitDetails_Section2_Column2</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>RcrVstMnlAsgntStartTimeDisplayText</name>
                    <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;Start Date and Time:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;{!schedulingStartDateTime}&lt;/span&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>3</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>ScreenDisplayRecurringVisitDetails_Section2_Column3</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>RecurringVisitManualAssignmentSchedulingPolicyDisplayText</name>
                    <fieldText>&lt;p&gt;Scheduling Policy :&lt;/p&gt;&lt;p&gt;{!SchedulingPolicyPicklist}&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>3</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>ScreenDisplayRecurringVisitDetails_Section2_Column4</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>RcrVstMnlAsgntWorkTypeDisplayText</name>
                    <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;Work Type:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;{!WorkTypeName}&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>3</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithoutHeader</regionContainerType>
        </fields>
        <fields>
            <name>RcrVstMnlAsgntVisitsRequiredDisplayText</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;Visits Required﻿&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;{!VisitsRequiredNumber}&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <nextOrFinishButtonLabel>Next</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>$Label.ScheduleHomeVisitsFlow.ScreenDisplayStartOfCareVisitDetailsDesc</description>
        <name>ScreenDisplayStartOfCareVisitDetails</name>
        <label>Display Start of Care Visit Details</label>
        <locationX>10030</locationX>
        <locationY>4328</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>GetResourcesforStartOfCareVisitManualScheduling</targetReference>
        </connector>
        <fields>
            <name>ScreenDisplayStartOfCareVisitDetails_Section1</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>ScreenDisplayStartOfCareVisitDetails_Section1_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>StartOfCareManualAssignmentDisplayText</name>
                    <fieldText>&lt;p&gt;Start of Care Visit Details&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>12</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithoutHeader</regionContainerType>
        </fields>
        <fields>
            <name>ScreenDisplayStartOfCareVisitDetails_Section2</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>ScreenDisplayStartOfCareVisitDetails_Section2_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>StartOfCareManualAssignmentVisitTypeDisplayText</name>
                    <fieldText>&lt;p&gt;Visit Type:&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;{!VisitTypePicklist}&lt;/span&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>3</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>ScreenDisplayStartOfCareVisitDetails_Section2_Column2</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>StrtOfCareMnlAsgntStartTimeDisplayText</name>
                    <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(68, 68, 68); background-color: rgb(255, 255, 255);&quot;&gt;Start Date and Time:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;{!startDateStartTime}&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>3</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>ScreenDisplayStartOfCareVisitDetails_Section2_Column3</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>StartOfCareManualAssignmentSchedulingPolicyDisplayText</name>
                    <fieldText>&lt;p&gt;Scheduling Policy :&lt;/p&gt;&lt;p&gt;{!SchedulingPolicyPicklist}&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>3</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>ScreenDisplayStartOfCareVisitDetails_Section2_Column4</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>StrtOfCareMnlAsgntWorkTypeDisplayText</name>
                    <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;Work Type:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;{!WorkTypeName}&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>3</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithoutHeader</regionContainerType>
        </fields>
        <nextOrFinishButtonLabel>Next</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>$Label.ScheduleHomeVisitsFlow.SelectVisitDetailsRecurringVisitScreenDesc</description>
        <name>SelectVisitDetailsRecurringVisitScreen</name>
        <label>Select Recurring Home Visit Details</label>
        <locationX>2052</locationX>
        <locationY>3122</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>IsRecurringAutoResourceAssignment</targetReference>
        </connector>
        <fields>
            <name>SelectVisitDetailsRecurringVisitScreen_Section1</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>SelectVisitDetailsRecurringVisitScreen_Section1_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>AuthorizedVisitsDisplayText</name>
                    <fieldText>&lt;p&gt;&amp;nbsp;Authorized Visits&lt;/p&gt;&lt;p&gt;{!ApprovedVisitCount}&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>SelectVisitDetailsRecurringVisitScreen_Section1_Column2</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>VisitsRequiredNumber</name>
                    <dataType>Number</dataType>
                    <defaultValue>
                        <elementReference>VisitRequired</elementReference>
                    </defaultValue>
                    <fieldText>Visits Required</fieldText>
                    <fieldType>InputField</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isDisabled>
                        <elementReference>DisableVisitsRequiredFieldFormula</elementReference>
                    </isDisabled>
                    <isRequired>true</isRequired>
                    <scale>0</scale>
                    <validationRule>
                        <errorMessage>&lt;p&gt;{!VisitRequiredErrorMessageFormula}&lt;/p&gt;</errorMessage>
                        <formulaExpression>{!ValidateVisitsRequiredFormula}</formulaExpression>
                    </validationRule>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithoutHeader</regionContainerType>
        </fields>
        <fields>
            <name>ShiftSlotSelectionComponent</name>
            <extensionName>healthcloud:shiftSlotDateTimeSelection</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>operatingHourId</name>
                <value>
                    <elementReference>recordId.OperatingHoursId</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>durationType</name>
                <value>
                    <elementReference>SchedulingPreferenceType</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>referenceId</name>
                <value>
                    <elementReference>homeVisitDetails.referenceId</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>source</name>
                <value>
                    <elementReference>homeVisitDetails.source</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>visitEndDateTime</name>
                <value>
                    <elementReference>startDateEndTime</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>visitStartDateTime</name>
                <value>
                    <elementReference>startDateStartTime</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <outputParameters>
                <assignToReference>OperatingHoursId</assignToReference>
                <name>operatingHourId</name>
            </outputParameters>
            <outputParameters>
                <assignToReference>SchedulingEndDateTime</assignToReference>
                <name>visitEndDateTime</name>
            </outputParameters>
            <outputParameters>
                <assignToReference>schedulingStartDateTime</assignToReference>
                <name>visitStartDateTime</name>
            </outputParameters>
            <outputParameters>
                <assignToReference>SchedulingPreferenceType</assignToReference>
                <name>durationType</name>
            </outputParameters>
        </fields>
        <fields>
            <name>RecurringPatternSelection</name>
            <extensionName>healthcloud:recurrencePatternSelection</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <outputParameters>
                <assignToReference>recurrenceType</assignToReference>
                <name>recurrenceType</name>
            </outputParameters>
            <outputParameters>
                <assignToReference>recurrenceWeekDays</assignToReference>
                <name>recurringDaysList</name>
            </outputParameters>
        </fields>
        <fields>
            <name>SelectVisitDetailsRecurringVisitScreen_Section2</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>SelectVisitDetailsRecurringVisitScreen_Section2_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>ErrorOperatingHoursRecurringVisitManualAssignmentDisplayText</name>
                    <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(228, 13, 13);&quot;&gt;You can’t assign resources manually to these recurring visits because the Shift Preference isn’t set to Operating Hours.&lt;/span&gt;&lt;span style=&quot;color: rgb(237, 40, 6);&quot;&gt;﻿&lt;/span&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>ResourceAssignmentRadioButton</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>ChoiceManualAssignment</elementReference>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>SchedulingPreferenceIsOperatingHours</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <booleanValue>false</booleanValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>12</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithoutHeader</regionContainerType>
        </fields>
        <nextOrFinishButtonLabel>Next</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>$Label.ScheduleHomeVisitsFlow.SelectVisitDetailsDesc</description>
        <name>SelectVisitDetailsScreen</name>
        <label>Select Visit Details</label>
        <locationX>9257</locationX>
        <locationY>1550</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>SetManualAssignmentForMultiResources</targetReference>
        </connector>
        <fields>
            <name>SelectVisitDetailsScreen_Section1</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>SelectVisitDetailsScreen_Section1_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>PatientName</name>
                    <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(68, 68, 68);&quot;&gt;Patient&lt;/span&gt;&lt;/p&gt;&lt;p&gt;{!recordId.Name}&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>SelectVisitDetailsScreen_Section1_Column2</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>VisitTypePicklist</name>
                    <choiceReferences>StartOfCareVisitChoice</choiceReferences>
                    <choiceReferences>RecurringVisitChoice</choiceReferences>
                    <dataType>String</dataType>
                    <defaultValue>
                        <elementReference>DefaultVisitType</elementReference>
                    </defaultValue>
                    <fieldText>Visit Type</fieldText>
                    <fieldType>DropdownBox</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithoutHeader</regionContainerType>
        </fields>
        <fields>
            <name>SelectVisitDetailsScreen_Section2</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>SelectVisitDetailsScreen_Section2_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>Region</name>
                    <extensionName>flowruntime:lookup</extensionName>
                    <fieldType>ComponentInstance</fieldType>
                    <inputParameters>
                        <name>label</name>
                        <value>
                            <stringValue>$Label.ScheduleHomeVisitsFlow.Region</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>objectApiName</name>
                        <value>
                            <stringValue>WorkOrder</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>fieldApiName</name>
                        <value>
                            <stringValue>ServiceTerritoryId</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>recordId</name>
                        <value>
                            <elementReference>ServiceTerritoryId</elementReference>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>required</name>
                        <value>
                            <booleanValue>true</booleanValue>
                        </value>
                    </inputParameters>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                    <storeOutputAutomatically>true</storeOutputAutomatically>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>SelectVisitDetailsScreen_Section2_Column2</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>SchedulingPolicyPicklist</name>
                    <choiceReferences>SchedulingPolicyRecordChoiceSet</choiceReferences>
                    <dataType>String</dataType>
                    <defaultValue>
                        <elementReference>GetSchedulingPolicy.Id</elementReference>
                    </defaultValue>
                    <fieldText>Scheduling Policy</fieldText>
                    <fieldType>DropdownBox</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithoutHeader</regionContainerType>
        </fields>
        <fields>
            <name>SelectVisitDetailsScreen_Section3</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>SelectVisitDetailsScreen_Section3_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>SkillSelectionComponent</name>
                    <extensionName>healthcloud:skillSelection</extensionName>
                    <fieldType>ComponentInstance</fieldType>
                    <inputParameters>
                        <name>patientId</name>
                        <value>
                            <elementReference>recordId.Id</elementReference>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>referenceId</name>
                        <value>
                            <elementReference>homeVisitDetails.referenceId</elementReference>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>source</name>
                        <value>
                            <elementReference>homeVisitDetails.source</elementReference>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>secondaryCareProfessionalSkills</name>
                        <value>
                            <elementReference>CareResource2SkillIds</elementReference>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>primaryCareProfessionalSkills</name>
                        <value>
                            <elementReference>CareResource1SkillIds</elementReference>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>clinicalServiceRequestId</name>
                        <value>
                            <elementReference>clinicalServiceRequest</elementReference>
                        </value>
                    </inputParameters>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                    <outputParameters>
                        <assignToReference>clinicalServiceRequest</assignToReference>
                        <name>clinicalServiceRequestId</name>
                    </outputParameters>
                    <outputParameters>
                        <assignToReference>filteredSkillList</assignToReference>
                        <name>additionalSkillsIds</name>
                    </outputParameters>
                    <outputParameters>
                        <assignToReference>skillsListId</assignToReference>
                        <name>allSkillsIds</name>
                    </outputParameters>
                    <outputParameters>
                        <assignToReference>workTypeId</assignToReference>
                        <name>workTypeId</name>
                    </outputParameters>
                    <outputParameters>
                        <assignToReference>requriedCareResourcesCount</assignToReference>
                        <name>careProfessionalNeeded</name>
                    </outputParameters>
                    <outputParameters>
                        <assignToReference>CareResource1SkillIds</assignToReference>
                        <name>primaryCareProfessionalSkills</name>
                    </outputParameters>
                    <outputParameters>
                        <assignToReference>CareResource2SkillIds</assignToReference>
                        <name>secondaryCareProfessionalSkills</name>
                    </outputParameters>
                    <outputParameters>
                        <assignToReference>WorkTypeIds</assignToReference>
                        <name>workTypeIdList</name>
                    </outputParameters>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>12</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithoutHeader</regionContainerType>
        </fields>
        <fields>
            <name>SelectVisitDetailsScreen_Section4</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>SelectVisitDetailsScreen_Section4_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>ResourceAssignmentRadioButton</name>
                    <choiceReferences>ChoiceAutoAssignment</choiceReferences>
                    <choiceReferences>ChoiceManualAssignment</choiceReferences>
                    <dataType>String</dataType>
                    <defaultSelectedChoiceReference>ChoiceAutoAssignment</defaultSelectedChoiceReference>
                    <fieldText>Resource Assignment</fieldText>
                    <fieldType>RadioButtons</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>SelectVisitDetailsScreen_Section4_Column2</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>AuthorizationRequiredCheckbox</name>
                    <dataType>Boolean</dataType>
                    <defaultValue>
                        <elementReference>IsAuthorizationRequired</elementReference>
                    </defaultValue>
                    <fieldText>Authorization Required</fieldText>
                    <fieldType>InputField</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                    <visibilityRule>
                        <conditionLogic>1</conditionLogic>
                        <conditions>
                            <leftValueReference>VisitTypePicklist</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>RecurringVisitChoice</elementReference>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>ActiveCoverageBenefitMessageDisplayText</name>
                    <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(46, 132, 74);&quot;&gt;Found active &apos;{!HomeHealthCoverageType}&apos; type coverage benefit for the patient&lt;/span&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>VisitTypePicklist</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <elementReference>RecurringVisitChoice</elementReference>
                            </rightValue>
                        </conditions>
                        <conditions>
                            <leftValueReference>IsHomeVisitCoverageBenefitActive</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <booleanValue>true</booleanValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithoutHeader</regionContainerType>
        </fields>
        <fields>
            <name>SelectVisitDetailsScreen_Section5</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>SelectVisitDetailsScreen_Section5_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>ErrorManualAssignmentDisplayText</name>
                    <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(228, 13, 13);&quot;&gt;You can’t assign resources manually when scheduling dependent visits that require two care resources.&lt;/span&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>IsManualAssignmentForMultiResources</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <booleanValue>true</booleanValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>12</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithoutHeader</regionContainerType>
        </fields>
        <nextOrFinishButtonLabel>Next</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>$Label.ScheduleHomeVisitsFlow.SelectVisitTimeDesc</description>
        <name>SelectVisitTimeStartCareScreen</name>
        <label>Select Visit Time</label>
        <locationX>8230</locationX>
        <locationY>2090</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>IsStartOfCareAutoResourceAssignment</targetReference>
        </connector>
        <fields>
            <name>SelectVisitTimeStartCareComponent</name>
            <extensionName>healthcloud:shiftSlotDateTimeSelection</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>operatingHourId</name>
                <value>
                    <elementReference>recordId.OperatingHoursId</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>referenceId</name>
                <value>
                    <elementReference>homeVisitDetails.referenceId</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>source</name>
                <value>
                    <elementReference>homeVisitDetails.source</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>durationType</name>
                <value>
                    <elementReference>SchedulingPreferenceType</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>visitEndDateTime</name>
                <value>
                    <elementReference>startDateEndTime</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>visitStartDateTime</name>
                <value>
                    <elementReference>startDateStartTime</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <outputParameters>
                <assignToReference>OperatingHoursId</assignToReference>
                <name>operatingHourId</name>
            </outputParameters>
            <outputParameters>
                <assignToReference>startDateEndTime</assignToReference>
                <name>visitEndDateTime</name>
            </outputParameters>
            <outputParameters>
                <assignToReference>startDateStartTime</assignToReference>
                <name>visitStartDateTime</name>
            </outputParameters>
            <outputParameters>
                <assignToReference>SchedulingPreferenceType</assignToReference>
                <name>durationType</name>
            </outputParameters>
        </fields>
        <nextOrFinishButtonLabel>Next</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>9131</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>HaveHomeVisitReferenceId</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <description>Store the number of approved visits available for the care request item associated with the selectedClinicalServiceRequestId.</description>
        <name>ApprovedVisitCount</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <scale>0</scale>
    </variables>
    <variables>
        <description>This variable isn&apos;t used in the flow and returns no value.</description>
        <name>assignedVisitCount</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <description>This variable isn&apos;t used in the flow and returns no value.</description>
        <name>AuthorizationRefId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>Stores a collection of skill IDs that the first care resource is required to have.</description>
        <name>CareResource1SkillIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores a collection of skill IDs that the second care resource is required to have.</description>
        <name>CareResource2SkillIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the record ID of the care service visit created by CreateCareServiceVisit and is available as output from the flow.</description>
        <name>careServiceVisitId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>Stores the record ID of the care service visit plan created by the ScheduleRecurringVisit action and is available as output from the flow.</description>
        <name>careServiceVisitPlanId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>Stores the ID of the clinical service request that the flow user selected in SelectSvcRequestAndSkillsComponent on CollectVisitDetailsScreen and is available as output from the flow.</description>
        <name>clinicalServiceRequest</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>clinicalServiceRequestName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>This variable isn&apos;t used in the flow and returns no value.</description>
        <name>CompletedVisitCount</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <description>Stores a collection of skill record IDs for a care visit that has two care resources.</description>
        <name>ComplexVisitSkillIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>This variable isn&apos;t used in the flow and returns no value.</description>
        <name>createCareServiceVisit</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <objectType>CareServiceVisit</objectType>
    </variables>
    <variables>
        <name>currentItemFromSourceCollection</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>AccountServicePreference</objectType>
    </variables>
    <variables>
        <description>Stores the default visit type of the home visit. The default value is set to StartOfCareVisitChoice.</description>
        <name>DefaultVisitType</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <elementReference>StartOfCareVisitChoice</elementReference>
        </value>
    </variables>
    <variables>
        <description>Stores a null date/time value.</description>
        <name>endDateNull</name>
        <dataType>DateTime</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>Stores a collection of the additional skills that the user selected in SelectSvcRequestAndSkillsComponent on CollectVisitDetailsScreen. The collection doesn&apos;t include skills that are auto-selected based on the work type associated with the selected services request. This variable is available as output from the flow.</description>
        <name>filteredSkillList</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>Stores an Apex heathcloudext__HomeVisitDetails record that contains the source and the reference ID of the home visit, and is passed into the flow.</description>
        <name>homeVisitDetails</name>
        <apexClass>healthcloudext__HomeVisitDetails</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Indicates whether authorization is needed for the service to be provided</description>
        <name>IsAuthorizationRequired</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>Stores a Boolean value that indicates whether the patient&apos;s coverage benefits and member plan are active and provide coverage for home healthcare visits.</description>
        <name>IsHomeVisitCoverageBenefitActive</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <description>$Label.ScheduleHomeVisitsFlow.IsManualAssignmentForMultiResourcesDesc</description>
        <name>IsManualAssignmentForMultiResources</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <description>This variable isn&apos;t used in the flow and returns no value.</description>
        <name>listOfSkills</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <objectType>Skill</objectType>
    </variables>
    <variables>
        <description>Stores the ID of the associated location record related to the account record passed into the flow.</description>
        <name>LocationId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>$Label.ScheduleHomeVisitsFlow.NullTextDesc</description>
        <name>NullText</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the ID of the operating hours record to use when the patient visits are to be scheduled during available hours instead of a specific time.</description>
        <name>OperatingHoursId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>$Label.ScheduleHomeVisitsFlow.OperatingHoursSchedulingPreferenceDesc</description>
        <name>OperatingHoursSchedulingPreference</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>true</booleanValue>
        </value>
    </variables>
    <variables>
        <description>Stores the account record of the patient to schedule home healthcare visits for and is passed into the flow.</description>
        <name>recordId</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>Account</objectType>
    </variables>
    <variables>
        <description>Stores the frequency type for recurring visits that the flow user selected in SelectVisitRecurrenceFrequencyComponent on SelectVisitDetailsRecurringVisitScreen. Available as output from the flow.</description>
        <name>recurrenceType</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>Stores a comma-delimited list of days the user selected to schedule recurring home visits in SelectVisitRecurrenceFrequencyComponent on SelectVisitDetailsRecurringVisitScreen. Available as output from the flow.</description>
        <name>recurrenceWeekDays</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>RecurringManualSchedulingWorkTypeId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>Stores the record ID of a care service visit and is used to set RelatedVisitId for complex visits.</description>
        <name>RelatedVisitId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the related visit type for a complex visit.</description>
        <name>RelatedVisitType</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the number of care resources needed for the scheduled visits.</description>
        <name>requriedCareResourcesCount</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <description>$Label.ScheduleHomeVisitsFlow.resourceRecommendationDesc</description>
        <name>resourceRecommendation</name>
        <apexClass>healthcloudext__ManualSchedulingRecommendationResponse</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>$Label.ScheduleHomeVisitsFlow.ResourceRecommendationCountDesc</description>
        <name>ResourceRecommendationCount</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>3.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>SchedulingEndDateTime</name>
        <dataType>DateTime</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>Stores the scheduling preference type that the flow user selects for the home visit.</description>
        <name>SchedulingPreferenceType</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>schedulingStartDateTime</name>
        <dataType>DateTime</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>$Label.ScheduleHomeVisitsFlow.SelectedResourceRecommendationDesc</description>
        <name>SelectedResourceRecommendation</name>
        <apexClass>healthcloudext__ResourceDetails</apexClass>
        <dataType>Apex</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>Stores the count of record IDs in ServiceAppointmentsForWorkOrderTemplates.</description>
        <name>ServiceAppointmentForWorkOrderTemplateCount</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
    <variables>
        <description>Stores the ID of service appointment records that are associated with a work order template.</description>
        <name>ServiceAppointmentsForWorkOrderTemplates</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>ServiceAppointment</objectType>
    </variables>
    <variables>
        <description>$Label.ScheduleHomeVisitsFlow.ServiceAppointmentTemplateCommentDesc</description>
        <name>ServiceAppointmentTemplateComment</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>$Label.ScheduleHomeVisitsFlow.ServiceAppointmentTemplateIdDesc</description>
        <name>ServiceAppointmentTemplateId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>Stores the ID, CreatedDate, ParentRecordId, and Comments of service appointment records.</description>
        <name>ServiceAppointmentTemplates</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>ServiceAppointment</objectType>
    </variables>
    <variables>
        <description>Stores the ID of the services territory location record associated through LocationId to the account record that was passed into the flow.</description>
        <name>ServiceTerritoryId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>This variable isn&apos;t used in the flow and returns no value.</description>
        <name>skillRequirementRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <objectType>SkillRequirement</objectType>
    </variables>
    <variables>
        <description>Stores a collection of all skills required for the visit and is available as output from the flow.</description>
        <name>skillsListId</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>Stores the date and time to end a visit when the visit is to be scheduled for a specific time and is available for output.</description>
        <name>startDateEndTime</name>
        <dataType>DateTime</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>Stores the date and time to start a visit when the visit is to be scheduled for a specific time and is available for output.</description>
        <name>startDateStartTime</name>
        <dataType>DateTime</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>This variable isn&apos;t used in the flow and returns no value.</description>
        <name>unAssignedVisitCount</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <description>This variable isn&apos;t used in the flow and returns no value.</description>
        <name>VisitRequired</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <description>$Label.ScheduleHomeVisitsFlow.WorkOrderTemplateIdDesc</description>
        <name>WorkOrderTemplateId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the ID of the work type that the flow user selected in  SelectSvcRequestAndSkillsComponent on CollectVisitDetailsScreen.</description>
        <name>workTypeId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>Stores a collection of work type record IDs associated with the clinical service request.</description>
        <name>WorkTypeIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>$Label.ScheduleHomeVisitsFlow.WorkTypeNameDesc</description>
        <name>WorkTypeName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
