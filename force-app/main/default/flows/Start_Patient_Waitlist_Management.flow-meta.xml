<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>Calls an action that schedules an appointment for the waitlist participant. The patient is set to the patient in the Outputs from Get Waitlist Participant action. The status is set to None. The healthcare practitioner facility is set to the facility in the Healthcare Practitioner Facility Appointment from Get Practitioner Facility Appointment variable. The channel is set to the engagement channel type for the service appointment that triggered the flow, the start date is set to the scheduled start of the service appointment that triggered the flow, the end date is set to the scheduled end of the service appointment that triggered the flow, the service territory is set to the territory for the service appointment that triggered the flow, and the work type is set to the work type for the service appointment that triggered the flow.</description>
        <name>BookAppointment</name>
        <label>Book Appointment</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <actionName>bookAppointment</actionName>
        <actionType>bookAppointment</actionType>
        <connector>
            <targetReference>Appointment_Booked</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Set_Fault_Message</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>patientId</name>
            <value>
                <elementReference>GetWaitlistParticipant.patientId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>startTime</name>
            <value>
                <elementReference>$Record.SchedStartTime</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>endTime</name>
            <value>
                <elementReference>$Record.SchedEndTime</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>serviceTerritoryId</name>
            <value>
                <elementReference>$Record.ServiceTerritoryId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>serviceResourceId</name>
            <value>
                <elementReference>GetAssignedServiceResource.ServiceResourceId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>channelId</name>
            <value>
                <elementReference>$Record.EngagementChannelTypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>healthCarePractitionerFacilityId</name>
            <value>
                <elementReference>GetHealthcarePractitionerFacilityAppointment.HealthcarePractitionerFacilityId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>appointmentStatus</name>
            <value>
                <stringValue>None</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>workTypeId</name>
            <value>
                <elementReference>$Record.WorkTypeId</elementReference>
            </value>
        </inputParameters>
        <nameSegment>bookAppointment</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <actionCalls>
        <description>Calls an action to get the waitlist configuration parameter values configured by the Admin in theWaitlist Management guided setup.</description>
        <name>GetWaitlistMetadata</name>
        <label>Get Waitlist Metadata</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <actionName>getWaitlistMetadata</actionName>
        <actionType>getWaitlistMetadata</actionType>
        <connector>
            <targetReference>CanScheduleAppointment</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <nameSegment>getWaitlistMetadata</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <actionCalls>
        <description>Calls an action that gets the first participant on the waitlist for this appointment. The appointment work type and service resource of the cancelled appointment determines the waitlist that is fetched.</description>
        <name>GetWaitlistParticipant</name>
        <label>Get Waitlist Participant</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <actionName>getWaitlistParticipant</actionName>
        <actionType>getWaitlistParticipant</actionType>
        <connector>
            <targetReference>HasWaitlistParticipant</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>serviceAppointmentId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>serviceResourceId</name>
            <value>
                <elementReference>GetAssignedServiceResource.ServiceResourceId</elementReference>
            </value>
        </inputParameters>
        <nameSegment>getWaitlistParticipant</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <actionCalls>
        <description>Calls an action that sends the appointment invitation email to the waitlist participant. Uses the email template from the Email Template from Get Email Template variable, the contact from the Account from Get Patient variable, and the appointment invitation from the Appointment Invitation from the Get Appointment Invitation variable.</description>
        <name>SendEmail</name>
        <label>Send Email</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>sendRichBody</name>
        </inputParameters>
        <inputParameters>
            <name>emailTemplateId</name>
            <value>
                <elementReference>GetEmailTemplateIdWithName.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientId</name>
            <value>
                <elementReference>GetPatient.PersonContactId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>relatedRecordId</name>
            <value>
                <elementReference>GetAppointmentInvitation.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
    </actionCalls>
    <apiVersion>64.0</apiVersion>
    <assignments>
        <description>Sets the number of resources assigned to a service appointment.</description>
        <name>AssignResourceCount</name>
        <label>Assign Resource Count</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>ResourceCount</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>GetServiceResourceforAppointment</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>IsMultiResourceAppointment</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Fault_Message</name>
        <label>Set Fault Message</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>BookAppointmentErrorMessage</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>$Flow.FaultMessage</stringValue>
            </value>
        </assignmentItems>
    </assignments>
    <decisions>
        <description>Checks if an appointment is booked for the waitlist patient.</description>
        <name>Appointment_Booked</name>
        <label>Has Appointment Booked?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Booked</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>BookAppointment.serviceAppointmentId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetPatient</targetReference>
            </connector>
            <label>Booked</label>
        </rules>
    </decisions>
    <decisions>
        <description>Checks if we have enough time to rebook the appointment.</description>
        <name>CanScheduleAppointment</name>
        <label>Can Schedule Appointment?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnectorLabel>No (Default)</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.SchedStartTime</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <elementReference>maxTimeAllowedToRebook</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetAssignedServiceResource</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines if there are patients on the waitlist for this appointment work type and service resource.</description>
        <name>HasWaitlistParticipant</name>
        <label>Has Waitlist Participant?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnectorLabel>No (Default)</defaultConnectorLabel>
        <rules>
            <name>ParticipantAvailable</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetWaitlistParticipant.waitlistParticipantId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetHealthcarePractitionerFacilityAppointment</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Checks if the Patient has an email address.</description>
        <name>Is_Email_Present</name>
        <label>Is Email Present</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>GetWaitlistParticipant</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Patient_Has_Email</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetPatient.PersonEmail</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>CreateAppointmentInvitation</targetReference>
            </connector>
            <label>Patient Has Email</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether the number of service resources returned by GetServiceResourceforAppointment is greater than one. The flow only allows single resource appointments.</description>
        <name>IsMultiResourceAppointment</name>
        <label>Is Multi-Resource Appointment?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>GetWaitlistMetadata</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No (Default)</defaultConnectorLabel>
        <rules>
            <name>MultiResource</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ResourceCount</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>1.0</numberValue>
                </rightValue>
            </conditions>
            <label>Yes</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <description>Gets the appointment booking URL included in the email invitation sent to a waitlist participant.</description>
        <name>AppointmentBookingURL</name>
        <dataType>String</dataType>
        <expression>{!GetAppointmentInvitation.InvitationUrl} + {!GetAppointmentInvitation.InvitationIdentifier}</expression>
    </formulas>
    <formulas>
        <description>Calculates whether there is enough lead time to offer the appointment slot to a waitlist participant.</description>
        <name>maxTimeAllowedToRebook</name>
        <dataType>DateTime</dataType>
        <expression>NOW() + ({!GetWaitlistMetadata.rebookingLeadTimeInHours} / 24)</expression>
    </formulas>
    <formulas>
        <description>Calculates the deadline for the waitlist participant to respond before the invitation is sent to the next participant in the waitlist.</description>
        <name>URLExpirationDateTime</name>
        <dataType>DateTime</dataType>
        <expression>NOW() + ({!GetWaitlistMetadata.appointmentInvitationExpiryInHours}/24)</expression>
    </formulas>
    <interviewLabel>Start Patient Waitlist Management {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Start Patient Waitlist Management</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <description>Creates an appointment invitation record from the values from the service appointment that triggered the flow, the value in the appointmentInvitationBaseURL variable, the value in the URLExpirationDateTimeFormula formula, and sets the appointment invitation to active. Stores the record in the Appointment InvitationId from Create Appointment Invitation variable.</description>
        <name>CreateAppointmentInvitation</name>
        <label>Create Appointment Invitation</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>GetAppointmentInvitation</targetReference>
        </connector>
        <inputAssignments>
            <field>AppointmentTopicId</field>
            <value>
                <elementReference>$Record.WorkTypeId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BookingEndDate</field>
            <value>
                <elementReference>$Record.SchedEndTime</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BookingStartDate</field>
            <value>
                <elementReference>$Record.SchedStartTime</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>EngagementChannelTypeId</field>
            <value>
                <elementReference>$Record.EngagementChannelTypeId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>InvitationUrl</field>
            <value>
                <elementReference>appointmentInvitationBaseURL</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>IsActive</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ServiceTerritoryId</field>
            <value>
                <elementReference>$Record.ServiceTerritoryId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>UrlExpiryDate</field>
            <value>
                <elementReference>URLExpirationDateTime</elementReference>
            </value>
        </inputAssignments>
        <object>AppointmentInvitation</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <description>Gets the appointment invitation record with an ID that matches the appointment invitation ID from Create Appointment Invitation.</description>
        <name>GetAppointmentInvitation</name>
        <label>Get Appointment Invitation</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>UpdateServiceAppointmentWithInvitation</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>CreateAppointmentInvitation</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>AppointmentInvitation</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Get the Service Resource assigned in the appointment</description>
        <name>GetAssignedServiceResource</name>
        <label>Get Assigned Service Resource</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetWaitlistParticipant</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ServiceAppointmentId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>AssignedResource</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets the Email Template ID and name for the waitlist appointment invitation email. Stores the result in the emailTemplateName record variable.</description>
        <name>GetEmailTemplateIdWithName</name>
        <label>Get Email Template ID with Name</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SendEmail</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>emailTemplateName</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>EmailTemplate</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets the healthcare practitioner facility appointment record with an ID that matches the recordId passed into the flow. Stores the result in the Healthcare Practitioner Facility Appointment from Get Practitioner Information record variable.</description>
        <name>GetHealthcarePractitionerFacilityAppointment</name>
        <label>Get Practitioner Information</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>BookAppointment</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ServiceAppointmentId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CarePractnFacilityAppt</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets the account for the patient by checking for an account ID that matches the patient ID in the Outputs from Get Waitlist Participant action. Stores the result in the Account from Get Patient variable.</description>
        <name>GetPatient</name>
        <label>Get Patient</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Is_Email_Present</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetWaitlistParticipant.patientId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets the service resource records related to the appointment. Stores the result in the Assigned Resources from Get Service Resource for Appointment record collection.</description>
        <name>GetServiceResourceforAppointment</name>
        <label>Get Service Resource for Appointment</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>AssignResourceCount</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ServiceAppointmentId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>AssignedResource</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <description>Updates the service appointment from the Outputs from Book Appointment action with the Appointment InvitationId from Create Appointment Invitation and sets the additional information to the service appointment ID from the Outputs from Get Waitlist Participant action.</description>
        <name>UpdateServiceAppointmentWithInvitation</name>
        <label>Update ServiceAppointment With Invitation</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>UpdateWaitlistParticipant</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>BookAppointment.serviceAppointmentId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>AdditionalInformation</field>
            <value>
                <elementReference>GetWaitlistParticipant.serviceAppointmentId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>AppointmentInvitationId</field>
            <value>
                <elementReference>CreateAppointmentInvitation</elementReference>
            </value>
        </inputAssignments>
        <object>ServiceAppointment</object>
    </recordUpdates>
    <recordUpdates>
        <description>Updates the waitlist participant record with a status of Assigned and sets the service appointment to the service appointment in the Output from Book Appointment action.</description>
        <name>UpdateWaitlistParticipant</name>
        <label>Update Waitlist Participant</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>GetEmailTemplateIdWithName</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetWaitlistParticipant.waitlistParticipantId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>ServiceAppointmentId</field>
            <value>
                <elementReference>BookAppointment.ServiceAppointmentId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Assigned</stringValue>
            </value>
        </inputAssignments>
        <object>WaitlistParticipant</object>
    </recordUpdates>
    <sourceTemplate>WaitlistFlows__StartWaitlistMgmtFlow</sourceTemplate>
    <start>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>GetServiceResourceforAppointment</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Canceled</stringValue>
            </value>
        </filters>
        <filters>
            <field>StatusReason</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>PreReqFailed</stringValue>
            </value>
        </filters>
        <object>ServiceAppointment</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <description>Stores the base URL for the Experience Cloud site where the waitlist participant can accept or reject the appointment.</description>
        <name>appointmentInvitationBaseURL</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>https://hc-learning-usa794org5.my.site.com/SelfService/s/waitlist-appointment</stringValue>
        </value>
    </variables>
    <variables>
        <name>BookAppointmentErrorMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the unique template name for the email template used for sending appointment invitations to waitlist participants.</description>
        <name>emailTemplateName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>WaitlistAppointmentInvitation</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the count of service resources assigned to the appointment.</description>
        <name>ResourceCount</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
</Flow>
